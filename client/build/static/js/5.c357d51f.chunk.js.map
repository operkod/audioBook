{"version":3,"sources":["components/input/TextArea.tsx","page/AddBook/index.tsx"],"names":["TextArea","Input","InputText","props","name","value","placeholder","error","minRows","maxRows","label","styleProp","onChange","onBlur","id","className","cn","status","text","autoSize","style","initFormData","author","description","AddBook","t","useTranslation","dispatch","useDispatch","React","useState","buttonDisabled","setButtonDisabled","formaData","setFormData","setError","handleChange","useCallback","event","target","prev","handleBlur","handleSubmit","preventDefault","Object","entries","reduce","acc","key","Actions","requestAddBook","setTimeout","isButtonDisabled","useMemo","values","some","item","onSubmit","width","type","htmlType","disabled"],"mappings":"qQAKQA,EAAaC,IAAbD,SAmDOE,EApCG,SAACC,GAAkB,IAEnCC,EAUGD,EAVHC,KACAC,EASGF,EATHE,MACAC,EAQGH,EARHG,YACAC,EAOGJ,EAPHI,MALkC,EAY/BJ,EANHK,eANkC,MAMxB,EANwB,IAY/BL,EALHM,eAPkC,MAOxB,EAPwB,EAQlCC,EAIGP,EAJHO,MACAC,EAGGR,EAHHQ,UACAC,EAEGT,EAFHS,SACAC,EACGV,EADHU,OAED,OACC,qCACC,uBACCC,GAAIV,EACJW,UAAWC,IAAG,eAAgB,CAC7B,qBAAsBT,EAAMH,GAAMa,SAHpC,SAKEV,EAAMH,GAAMa,OAASV,EAAMH,GAAMc,KAAOR,IAE1C,cAACV,EAAD,CACCc,GAAIV,EACJA,KAAMA,EACNC,MAAOA,EAAMD,GACbQ,SAAUA,EACVN,YAAaA,EACba,SAAU,CAAEX,UAASC,WACrBI,OAAQA,EACRO,MAAOT,Q,yBCzCLU,EAAe,CAAEjB,KAAM,GAAIkB,OAAQ,GAAIC,YAAa,IA0H3CC,UAxHC,WAAO,IACdC,EAAMC,cAAND,EACFE,EAAWC,cAFI,EAGuBC,IAAMC,UAAS,GAHtC,mBAGdC,EAHc,KAGEC,EAHF,OAIYH,IAAMC,SAAST,GAJ3B,mBAIdY,EAJc,KAIHC,EAJG,OAKKL,IAAMC,SAA4B,CAC3D1B,KAAM,CAAEa,QAAQ,EAAOC,KAAM,IAC7BI,OAAQ,CAAEL,QAAQ,EAAOC,KAAM,IAC/BK,YAAa,CAAEN,QAAQ,EAAOC,KAAM,MARhB,mBAKdX,EALc,KAKP4B,EALO,KAWfC,EAAeP,IAAMQ,aAC1B,SAACC,GAAmD,IAAD,EAC1BA,EAAMC,OAAtBnC,EAD0C,EAC1CA,KAAMC,EADoC,EACpCA,OACa,IAAvBE,EAAMH,GAAMa,QACfkB,GAAS,SAAAK,GAAI,kCAAUA,GAAV,kBAAiBpC,EAAO,CAAEa,QAAQ,EAAOC,KAAM,SAE7DgB,GAAY,SAAAM,GAAI,kCAAUA,GAAV,kBAAiBpC,EAAOC,SAEzC,CAACE,IAGIkC,EAAaZ,IAAMQ,aACxB,SAACC,GAAkD,IAAD,EACzBA,EAAMC,OAAtBnC,EADyC,EACzCA,KAAMC,EADmC,EACnCA,MACd8B,GAAS,SAAAK,GAAI,kCACTA,GADS,kBAEXpC,EAAO,CAAEa,QAASZ,EAAOa,KAAOb,EAA+B,GAAvBoB,EAAE,2BAG7C,CAACA,IAGIiB,EAAeb,IAAMQ,aAC1B,SAACC,GACAA,EAAMK,iBACoBC,OAAOC,QAAQZ,GAAWa,QACnD,SAACC,EAAD,GAAwB,IAAD,mBAAhBC,EAAgB,KACtB,OADsB,KAQfD,GANNZ,GAAS,SAAAK,GAAI,kCACTA,GADS,kBAEXQ,EAAM,CAAE/B,QAAQ,EAAMC,KAAMO,EAAE,0BAElB,MAIhB,KAKDE,EAASsB,IAAQC,eAAejB,IAChCD,GAAkB,GAClBmB,YAAW,WACVnB,GAAkB,GAClBE,EAAYb,KACV,QAEJ,CAACY,EAAWN,EAAUF,IAGjB2B,EAAmBvB,IAAMwB,SAC9B,kBACCT,OAAOU,OAAO/C,GAAOgD,MAAK,SAAAC,GAAI,OAAoB,IAAhBA,EAAKvC,WAAoBc,IAC5D,CAACxB,EAAOwB,IAGT,OACC,qBAAKhB,UAAU,UAAf,SACC,qBAAKA,UAAU,YAAf,SACC,qBAAKA,UAAU,eAAf,SACC,uBAAMA,UAAU,gBAAgB0C,SAAUf,EAA1C,UACC,cAAC,EAAD,CACCtC,KAAK,OACLC,MAAO4B,EACPrB,SAAUwB,EACVvB,OAAQ4B,EACR/B,MAAOe,EAAE,mBACTnB,YAAamB,EAAE,mBACflB,MAAOA,EACPI,UAAW,CAAE+C,MAAO,WAErB,cAAC,EAAD,CACCtD,KAAK,SACLC,MAAO4B,EACPrB,SAAUwB,EACVvB,OAAQ4B,EACR/B,MAAOe,EAAE,qBACTnB,YAAamB,EAAE,qBACflB,MAAOA,EACPI,UAAW,CAAE+C,MAAO,WAErB,cAAC,EAAD,CACCtD,KAAK,cACLC,MAAO4B,EACPrB,SAAUwB,EACVvB,OAAQ4B,EACR/B,MAAOe,EAAE,0BACTnB,YAAamB,EAAE,0BACflB,MAAOA,EACPC,QAAS,EACTC,QAAS,EACTE,UAAW,CAAE+C,MAAO,WAErB,qBAAK3C,UAAU,eAAf,SACC,cAAC,IAAD,CACC4C,KAAK,UACLC,SAAS,SACTC,SAAUT,EAHX,SAIE3B,EAAE","file":"static/js/5.c357d51f.chunk.js","sourcesContent":["import './Style.scss'\r\nimport React from 'react'\r\nimport { Input } from 'antd'\r\nimport cn from 'classnames'\r\n\r\nconst { TextArea } = Input\r\n\r\ntype Props = {\r\n\tname: string\r\n\tvalue?: any\r\n\terror?: any\r\n\tplaceholder?: string\r\n\tminRows?: number\r\n\tmaxRows?: number\r\n\tlabel?: string\r\n\tstyleProp?: any\r\n\tonChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n\tonBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst InputText = (props: Props) => {\r\n\tconst {\r\n\t\tname,\r\n\t\tvalue,\r\n\t\tplaceholder,\r\n\t\terror,\r\n\t\tminRows = 1,\r\n\t\tmaxRows = 1,\r\n\t\tlabel,\r\n\t\tstyleProp,\r\n\t\tonChange,\r\n\t\tonBlur\r\n\t} = props\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label\r\n\t\t\t\tid={name}\r\n\t\t\t\tclassName={cn('input__label', {\r\n\t\t\t\t\t'input__label-error': error[name].status\r\n\t\t\t\t})}>\r\n\t\t\t\t{error[name].status ? error[name].text : label}\r\n\t\t\t</label>\r\n\t\t\t<TextArea\r\n\t\t\t\tid={name}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalue={value[name]}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tautoSize={{ minRows, maxRows }}\r\n\t\t\t\tonBlur={onBlur}\r\n\t\t\t\tstyle={styleProp}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default InputText\r\n","import './AddBook.scss'\r\nimport React from 'react'\r\nimport { Button } from 'antd'\r\nimport TextArea from 'components/input/TextArea'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from 'redux/action/books'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { FormDataErrorType } from 'types'\r\n\r\nconst initFormData = { name: '', author: '', description: '' }\r\n\r\nconst AddBook = () => {\r\n\tconst { t } = useTranslation()\r\n\tconst dispatch = useDispatch()\r\n\tconst [buttonDisabled, setButtonDisabled] = React.useState(false)\r\n\tconst [formaData, setFormData] = React.useState(initFormData)\r\n\tconst [error, setError] = React.useState<FormDataErrorType>({\r\n\t\tname: { status: false, text: '' },\r\n\t\tauthor: { status: false, text: '' },\r\n\t\tdescription: { status: false, text: '' }\r\n\t})\r\n\r\n\tconst handleChange = React.useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\tconst { name, value } = event.target\r\n\t\t\tif (error[name].status === true) {\r\n\t\t\t\tsetError(prev => ({ ...prev, [name]: { status: false, text: '' } }))\r\n\t\t\t}\r\n\t\t\tsetFormData(prev => ({ ...prev, [name]: value }))\r\n\t\t},\r\n\t\t[error]\r\n\t)\r\n\r\n\tconst handleBlur = React.useCallback(\r\n\t\t(event: React.FocusEvent<HTMLTextAreaElement>) => {\r\n\t\t\tconst { name, value } = event.target\r\n\t\t\tsetError(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\t[name]: { status: !value, text: !value ? t('errors.required') : '' }\r\n\t\t\t}))\r\n\t\t},\r\n\t\t[t]\r\n\t)\r\n\r\n\tconst handleSubmit = React.useCallback(\r\n\t\t(event: React.FormEvent) => {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tconst checkFillingInput = Object.entries(formaData).reduce(\r\n\t\t\t\t(acc, [key, value]) => {\r\n\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\tsetError(prev => ({\r\n\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t[key]: { status: true, text: t('errors.required') }\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\treturn (acc = true)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t)\r\n\t\t\tif (checkFillingInput) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tdispatch(Actions.requestAddBook(formaData))\r\n\t\t\tsetButtonDisabled(true)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetButtonDisabled(false)\r\n\t\t\t\tsetFormData(initFormData)\r\n\t\t\t}, 2000)\r\n\t\t},\r\n\t\t[formaData, dispatch, t]\r\n\t)\r\n\r\n\tconst isButtonDisabled = React.useMemo(\r\n\t\t() =>\r\n\t\t\tObject.values(error).some(item => item.status === true) || buttonDisabled,\r\n\t\t[error, buttonDisabled]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className='addbook'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='addbook-wrap'>\r\n\t\t\t\t\t<form className='addbook__form' onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={formaData}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tlabel={t('book.input.name')}\r\n\t\t\t\t\t\t\tplaceholder={t('book.input.name')}\r\n\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\tstyleProp={{ width: '500px' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\tname='author'\r\n\t\t\t\t\t\t\tvalue={formaData}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tlabel={t('book.input.author')}\r\n\t\t\t\t\t\t\tplaceholder={t('book.input.author')}\r\n\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\tstyleProp={{ width: '500px' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\tvalue={formaData}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tlabel={t('book.input.description')}\r\n\t\t\t\t\t\t\tplaceholder={t('book.input.description')}\r\n\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\tminRows={3}\r\n\t\t\t\t\t\t\tmaxRows={7}\r\n\t\t\t\t\t\t\tstyleProp={{ width: '500px' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='addbook__btn'>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\thtmlType='submit'\r\n\t\t\t\t\t\t\t\tdisabled={isButtonDisabled}>\r\n\t\t\t\t\t\t\t\t{t('global.save')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddBook\r\n"],"sourceRoot":""}