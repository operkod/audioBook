{"version":3,"sources":["assets/audio/as.mp3","assets/img/logo.svg","components/Header/index.tsx","assets/img/comment.svg","assets/img/like-up.svg","assets/img/like.svg","utils/helpers/openNotification.ts","components/Article/index.tsx","utils/helpers/validateField.js","components/FormField/index.jsx","assets/img/author.svg","components/AuthorBlock/index.tsx","core/index.ts","utils/api/user.ts","redux/action/user.ts","assets/img/user.svg","components/Menu/components/WebMenu.tsx","components/Menu/components/MobileMenu.tsx","components/Menu/index.tsx","redux/action/audioPlayer.ts","components/AudioPlayer/index.tsx","utils/api/book.ts","redux/action/books.ts","redux/action/comments.ts","components/Loader/index.tsx","components/Modal/index.tsx","components/Comment/index.tsx","assets/img/play.svg","assets/img/stop.svg","components/ButtonPlay/index.tsx","containers/Article.tsx","page/Home/index.tsx","page/Auth/LoginForm/component/index.tsx","utils/helpers/validate.js","page/Auth/LoginForm/container/index.ts","page/Auth/LoginForm/index.ts","page/Auth/RegisterForm/component/index.tsx","page/Auth/RegisterForm/container/index.ts","page/Auth/RegisterForm/index.js","page/Auth/index.jsx","page/Profile/index.tsx","App.tsx","redux/reducer/audio.ts","redux/reducer/user.ts","redux/reducer/comments.ts","redux/reducer/books.ts","redux/reducer/index.ts","redux/store.ts","middleware/index.ts","index.js"],"names":["Search","Input","Header","onSearchBook","value","className","to","src","logoIcon","alt","placeholder","onSearch","defaultValue","enterButton","openNotification","text","type","title","duration","notification","message","description","Article","props","id","name","author","imgUrl","commentsSize","isAuth","visibleComment","console","log","React","useState","activeLike","setLike","countLike","setCountLike","logo","valueStyle","fontSize","whiteSpace","prefix","onClick","like","likeUp","bookId","icon","commentIcon","memo","validateField","key","touched","errors","FormField","handleChange","handleBlur","values","Item","validateStatus","help","hasFeedback","size","onChange","onBlur","AuthorBlock","classNames","authorIcon","axios","defaults","baseURL","window","location","origin","headers","authorization","localStorage","getItem","userApi","getMe","get","signIn","postData","post","signUp","savePhoto","photoFile","formData","FormData","append","Actions","setIsAuth","payload","setUserData","setLogOut","logOut","dispatch","clear","WebMenu","avatar","useDispatch","overlay","danger","placement","userIcon","MobileMenu","block","width","innerWidth","Menu","showMenu","setShowMenu","useSelector","state","user","data","handleResize","useCallback","clientWidth","document","body","useEffect","addEventListener","removeEventListener","setAudio","setAudioBookId","isPlay","connect","audio","audioSrc","item","isAudioPlay","myPlayer","useRef","current","play","pause","autoPlay","ref","onPlay","onPause","autoPlayAfterSrcChange","bookApi","getBook","page","search","setBook","book","setBookComment","getBookComment","fetchBooks","a","books","total","isShowComments","setComments","setCommentId","addComment","isLoader","style","display","justifyContent","alignItems","Loader","mapDispatchToProps","fetchAddComment","getState","comments","createComment","ActionsBooks","items","isShow","setValue","visible","onOk","onCancel","footer","map","Comment","_id","e","target","CommentBase","likes","setLikes","dislikes","setDislikes","action","setAction","actions","createElement","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","content","pathMp3","require","ButtonPlay","audioPlayerId","default","stopIcon","playIcon","fetchComments","find","el","length","ActionsAudio","Home","searchValue","setPage","index","textAlign","defaultCurrent","defaultPageSize","LoginForm","handleSubmit","isValid","isSubmitting","onSubmit","disabled","htmlType","validate","rules","email","test","password","password_2","fullname","Object","keys","forEach","LoginFormWithFormik","withFormik","enableReinitialize","mapPropsToValues","validateForm","setSubmitting","setErrors","Error","response","catch","displayName","RegisterForm","RegisterWidthFormik","Auth","exact","path","component","Title","Typography","Profile","history","useHistory","userName","push","level","fille","files","App","isAudio","render","initialState","initialUser","token","rootReducer","combineReducers","produce","draft","findIndex","pop","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","next","setItem","JSON","stringify","createStore","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e1d3d5ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/as.75695496.mp3\";","export default __webpack_public_path__ + \"static/media/logo.51a0411d.svg\";","import React from 'react'\r\nimport { Input } from 'antd'\r\nimport { Menu } from 'components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Header.scss'\r\n\r\nimport logoIcon from 'assets/img/logo.svg'\r\n\r\nconst { Search } = Input\r\n\r\ntype props = {\r\n  onSearchBook: (v: string) => void\r\n  value: string\r\n}\r\nconst Header: React.FC<props> = ({ onSearchBook, value }) => (\r\n  <header className=\"header\">\r\n    <div className=\"container\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header-content__logo\">\r\n          <Link to='/'><img src={logoIcon} alt=\"Books\" /></Link>\r\n        </div>\r\n        <div className=\"search\">\r\n          <Search placeholder=\"Название книги или афтора\" onSearch={onSearchBook} defaultValue={value} enterButton />\r\n        </div>\r\n        <div className=\"nav\">\r\n          <Menu />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/comment.df5e7701.svg\";","export default __webpack_public_path__ + \"static/media/like-up.0fd910a4.svg\";","export default __webpack_public_path__ + \"static/media/like.3202d8c4.svg\";","import { notification } from 'antd'\r\ntype Types = {\r\n  text: string\r\n  type?: 'info' | 'error' | 'warning' | 'success'\r\n  title?: string\r\n  duration?: number\r\n}\r\nexport const openNotification = ({ text, type = 'info', title, duration = 3 }: Types) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration\r\n  })\r\n","import React from 'react'\r\nimport { AuthorBlock, ButtonPlay } from 'components'\r\n\r\nimport './Article.scss'\r\n\r\nimport commentIcon from 'assets/img/comment.svg'\r\n\r\nimport { Statistic } from 'antd'\r\n\r\nimport logo from 'assets/img/logo.svg'\r\nimport like from 'assets/img/like-up.svg'\r\nimport likeUp from 'assets/img/like.svg'\r\nimport { openNotification } from 'utils/helpers/openNotification'\r\n\r\n\r\ntype Props = {\r\n  id: string\r\n  name?: string\r\n  author?: string\r\n  imgUrl?: string\r\n  description?: string\r\n  audioId?: string\r\n  commentsSize: number\r\n  isAuth: boolean\r\n  visibleComment: (arg: string) => void\r\n}\r\n\r\nconst Article: React.FC<Props> = (props) => {\r\n  const {\r\n    id,\r\n    name,\r\n    author,\r\n    imgUrl,\r\n    description,\r\n    commentsSize,\r\n    isAuth,\r\n    visibleComment,\r\n  } = props\r\n  console.log('render Article');\r\n\r\n  const [activeLike, setLike] = React.useState(false)\r\n  const [countLike, setCountLike] = React.useState<number>(0)\r\n  const handleClick = () => visibleComment(id)\r\n\r\n\r\n  const handleLike = () => {\r\n    if (!isAuth) {\r\n      return openNotification({\r\n        type: 'warning',\r\n        text: 'Зарегистрируйтесь, чтобы оставить лайк'\r\n      })\r\n    }\r\n    setLike(!activeLike)\r\n    if (activeLike) setCountLike(countLike - 1)\r\n    else setCountLike(countLike + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      <div className=\"article-left\">\r\n        <div className=\"article-img\">\r\n          <img src={imgUrl || logo} alt={name} />\r\n        </div>\r\n      </div>\r\n      <div className=\"article-description\">\r\n        <div className=\"article-description__body\">\r\n          <div className='body-wrap' >\r\n            <h2 className=\"article-description__body-title\">{name}</h2>\r\n            <Statistic valueStyle={{ fontSize: '20px', whiteSpace: 'nowrap' }} value={countLike} prefix={\r\n              <img className='article-description__body-like' onClick={handleLike} src={activeLike ? like : likeUp} alt=\"like\" />\r\n            }\r\n            />\r\n          </div>\r\n          <p className=\"article-description__body-text\">{description}</p>\r\n        </div>\r\n        <AuthorBlock name={author}\r\n        />\r\n        <div className=\"article-description__footer\">\r\n          <ButtonPlay bookId={id} />\r\n          <AuthorBlock\r\n            className=\"center\"\r\n            name={!!commentsSize ? `${commentsSize} коментария` : 'нет коментариев'}\r\n            icon={commentIcon}\r\n            onClick={handleClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// const propsAreEqual = (prevProps: Props, nextProps: Props): boolean => {\r\n//   return nextProps.audioId === nextProps.id && prevProps.isPlay !== nextProps.isPlay\r\n// }\r\n\r\nexport default React.memo(Article)\r\n\r\n","const validateField = (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return \"error\"\r\n    } else {\r\n      return \"success\"\r\n    }\r\n  } else {\r\n    return \"\"\r\n  }\r\n}\r\n\r\nexport default validateField\r\n","import {Form, Input} from 'antd'\r\nimport validateField from 'utils/helpers/validateField'\r\n\r\nconst FormField = props => {\r\n  const {name, placeholder, type, handleChange, handleBlur, touched, errors, values} = props\r\n  return (\r\n    <Form.Item\r\n      validateStatus={validateField(name, touched, errors)}\r\n      help={!touched[name] ? null : errors[name]}\r\n      hasFeedback\r\n    >\r\n      <Input\r\n        id={name}\r\n        size=\"large\"\r\n        placeholder={placeholder}\r\n        value={values[name]}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\nexport default FormField\r\n","export default __webpack_public_path__ + \"static/media/author.d1370a05.svg\";","import React from 'react'\r\nimport authorIcon from 'assets/img/author.svg'\r\nimport classNames from \"classnames\"\r\n\r\nimport './AuthorBlock.scss'\r\n\r\ntype props = {\r\n  name?: string \r\n  onClick?: () => void\r\n  icon?: string\r\n  className?: string | null\r\n}\r\n\r\n\r\nconst AuthorBlock: React.FC<props> = ({onClick , name, icon, className}) => (\r\n  <div className={classNames(\"author\", {[`${className}`]: !!className})} onClick={onClick}>\r\n    <div className=\"author-img\">\r\n      <img src={icon || authorIcon} alt={name} />\r\n    </div>\r\n    <div className=\"author-name\">{name}</div>\r\n  </div>\r\n)\r\n\r\nexport default AuthorBlock\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = window.location.origin\r\naxios.defaults.headers.authorization = `Bearer ${window.localStorage.getItem(\"token\")}`\r\n\r\ndeclare global {\r\n  interface Window {\r\n    axios: typeof axios\r\n  }\r\n}\r\nwindow.axios = axios\r\n\r\nexport default axios\r\n","import { AxiosResponse } from \"axios\"\r\nimport axios from \"core\"\r\n\r\nexport type UserDate = {\r\n  id: string\r\n  avatar: string \r\n  fullname: string\r\n}\r\n\r\nexport type ResponseAuth = {\r\n  token: string\r\n  user: UserDate \r\n}\r\nexport type signInType = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\n\r\nconst userApi = {\r\n  getMe: (): Promise<AxiosResponse<ResponseAuth>> => axios.get('/user/getme'),\r\n  signIn: (postData: signInType): Promise<AxiosResponse<ResponseAuth>> => axios.post('/user/signin', postData),\r\n  signUp: (postData: any): Promise<AxiosResponse<ResponseAuth>> => axios.post('/user/signup', postData),\r\n  savePhoto: (photoFile: any): Promise<AxiosResponse<any>> =>  {\r\n    const formData = new FormData()\r\n    formData.append(\"image\", photoFile)\r\n    return axios.post('user/photo',  formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  }\r\n}\r\nexport default userApi\r\n","import { Dispatch } from \"react\"\r\nimport { ThunkDispatch } from \"redux-thunk\"\r\nimport { InferActionsTypes, StateType } from \"redux/reducer\"\r\nimport { ResponseAuth } from \"utils/api/user\"\r\nimport userApi from \"utils/api/user\"\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nconst Actions = {\r\n  setIsAuth: (payload: boolean) => ({\r\n    type: 'USER@IS_AUTH',\r\n    payload\r\n  } as const),\r\n  setUserData: (payload: ResponseAuth) => ({\r\n    type: 'USER@SET_DATA',\r\n    payload\r\n  } as const),\r\n  setLogOut: () => ({\r\n    type: 'USER@LOG_OUT',\r\n  } as const)\r\n}\r\n\r\nexport const logOut = () => (dispatch: Dispatch<ActionsTypes>) => {\r\n  window.localStorage.clear()\r\n  window.axios.defaults.headers.authorization = null\r\n  dispatch(Actions.setIsAuth(false))\r\n  dispatch(Actions.setLogOut())\r\n}\r\nexport const fetchUserLogin = (postData: any) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    const { data } = await userApi.signIn(postData)\r\n    dispatch(Actions.setUserData(data))\r\n    dispatch(Actions.setIsAuth(true))\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message)\r\n  }\r\n}\r\nexport const fetchUserRegister = (postData: any) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    const { data } = await userApi.signUp(postData)\r\n    dispatch(Actions.setUserData(data))\r\n    dispatch(Actions.setIsAuth(true))\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message)\r\n  }\r\n}\r\nexport const getUserProfile = () => async (dispatch: ThunkDispatch<StateType, {}, ActionsTypes>) => {\r\n  try {\r\n    const { data } = await userApi.getMe()\r\n    dispatch(Actions.setUserData(data))\r\n  } catch (e) {\r\n    dispatch(logOut())\r\n  }\r\n}\r\n\r\nexport const updateAvatar = (fille: any) => async (dispatch: ThunkDispatch<StateType, {}, ActionsTypes>) => {\r\n  const { data } = await userApi.savePhoto(fille)\r\n  dispatch(Actions.setUserData(data))\r\n}\r\n\r\nexport default Actions\r\n","export default __webpack_public_path__ + \"static/media/user.4a895b67.svg\";","\r\nimport { Menu as MenuAntd, Dropdown, Avatar, Button, } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { logOut } from 'redux/action/user'\r\n\r\nimport userIcon from 'assets/img/user.svg'\r\n\r\nimport { MenuProps } from 'components/Menu'\r\n\r\nexport const WebMenu: React.FC<MenuProps> = ({ isAuth, avatar }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <>\r\n      { !isAuth\r\n        ? <>\r\n          <Link to=\"/signin\">\r\n            <Button type=\"primary\">Войти</Button>\r\n          </Link>\r\n          <Link to=\"/signup\">\r\n            <Button type=\"primary\">Зарегестрироватся</Button>\r\n          </Link>\r\n        </>\r\n\r\n        : <Dropdown overlay={\r\n          <MenuAntd>\r\n            <MenuAntd.Item>\r\n              <Link className=\"nav-link\" to='/addbook'>Добавить книгу</Link>\r\n            </MenuAntd.Item>\r\n            <MenuAntd.Item>\r\n              <Link to='profile'>Profile</Link>\r\n            </MenuAntd.Item>\r\n            <MenuAntd.Item onClick={() => dispatch(logOut())} danger>\r\n              Выйти\r\n        </MenuAntd.Item>\r\n          </MenuAntd>\r\n        } placement=\"bottomRight\">\r\n          <Avatar className=\"avatar\" size=\"large\" icon={<img src={avatar || userIcon} alt=\"UserAvatar\" />} />\r\n        </Dropdown>\r\n      }\r\n    </>\r\n  )\r\n}","\r\nimport { Menu as MenuAntd, Dropdown, Avatar, Button } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { logOut } from 'redux/action/user'\r\n\r\nimport userIcon from 'assets/img/user.svg'\r\n\r\nimport { MenuProps } from 'components/Menu'\r\n\r\nexport const MobileMenu: React.FC<MenuProps> = ({ isAuth, avatar }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <MenuAntd>\r\n      { !isAuth\r\n        ? <>\r\n          <Dropdown overlay={\r\n            <>\r\n              <MenuAntd.Item>\r\n                <Link to=\"/signin\">\r\n                  <Button block={true} type=\"primary\">Войти</Button>\r\n                </Link>\r\n              </MenuAntd.Item>\r\n              <MenuAntd.Item>\r\n                <Link to=\"/signup\">\r\n                  <Button type=\"primary\">Зарегестрироватся</Button>\r\n                </Link>\r\n              </MenuAntd.Item>\r\n            </>\r\n          } placement=\"bottomRight\">\r\n            <Avatar className=\"avatar\" size=\"large\" icon={<img src={avatar || userIcon} alt=\"UserAvatar\" />} />\r\n          </Dropdown>\r\n        </>\r\n\r\n        : (\r\n          <Dropdown overlay={\r\n            <>\r\n              <MenuAntd>\r\n                <MenuAntd.Item>\r\n                  <Link className=\"nav-link\" to='/addbook'>Добавить книгу</Link>\r\n                </MenuAntd.Item>\r\n                <MenuAntd.Item>\r\n                  <Link to='profile'>Profile</Link>\r\n                </MenuAntd.Item>\r\n                <MenuAntd.Item onClick={() => dispatch(logOut())} danger>\r\n                  Выйти\r\n                </MenuAntd.Item>\r\n              </MenuAntd>\r\n            </>\r\n          } placement=\"bottomRight\">\r\n            <Avatar className=\"avatar\" size=\"large\" icon={<img src={false || userIcon} alt=\"UserAvatar\" />} />\r\n          </Dropdown>\r\n        )}\r\n    </MenuAntd>\r\n  )\r\n}","import React from 'react'\r\nimport { WebMenu } from './components/WebMenu'\r\nimport { MobileMenu } from './components/MobileMenu'\r\nimport { useSelector } from 'react-redux'\r\nimport { StateType } from 'redux/reducer'\r\nimport './Avatar.scss'\r\n\r\n\r\nconst width: number = window.innerWidth\r\nconst currentWidth: number = 850\r\n\r\nexport type MenuProps = {\r\n  isAuth: boolean\r\n  avatar: string\r\n}\r\n\r\nconst Menu = () => {\r\n  const [showMenu, setShowMenu] = React.useState<boolean>(width > currentWidth)\r\n  const isAuth = useSelector((state: StateType) => state.user.isAuth)\r\n  const avatar = useSelector((state: StateType) => state.user.data?.avatar)\r\n\r\n\r\n  const handleResize = React.useCallback(() => {\r\n    let clientWidth = document.body.clientWidth\r\n    if (currentWidth > clientWidth) setShowMenu(false)\r\n    else setShowMenu(true)\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [handleResize])\r\n\r\n\r\n  return (\r\n    <>\r\n      {showMenu\r\n        ? <WebMenu isAuth={isAuth} avatar={avatar} />\r\n        : <MobileMenu isAuth={isAuth} avatar={avatar} />\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default Menu\r\n\r\n\r\n\r\n","import { Dispatch } from \"redux\"\r\nimport { InferActionsTypes } from \"redux/reducer\"\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  setAudio: (payload: string) => ({\r\n    type: 'AUDIO@SET_ITEM',\r\n    payload\r\n  } as const),\r\n  setAudioBookId: (payload: string) => ({\r\n    type: 'AUDIO@SET_ID',\r\n    payload\r\n  } as const),\r\n  isPlay: (payload: boolean) => ({\r\n    type: 'AUDIO@IS_PLAY',\r\n    payload\r\n  } as const),\r\n}\r\nexport const fetchAudio = (audioId: string) => (dispatch: Dispatch<ActionsTypes>) => {\r\n  // audioApi.getAudio(audioId).then(({ data }) => {\r\n  //   dispatch(Actions.setAudio(data.audio))\r\n  //   dispatch(Actions.setAudioLoader(false))\r\n  // })\r\n}\r\n","import React from 'react'\r\nimport H5AudioPlayer from 'react-h5-audio-player'\r\nimport { connect } from 'react-redux'\r\nimport { Actions } from 'redux/action/audioPlayer'\r\nimport { StateType } from 'redux/reducer'\r\n\r\nimport 'react-h5-audio-player/src/styles.scss'\r\nimport './AudioPlayer.scss'\r\n\r\ntype mapStateToPropsTypes = {\r\n  isPlay: boolean\r\n  audioSrc: string\r\n}\r\ntype mapDispatchToProps = {\r\n  isAudioPlay: (v: boolean) => void\r\n}\r\ntype Props = mapStateToPropsTypes & mapDispatchToProps\r\n\r\n\r\nconst AudioPlayer: React.FC<Props> = ({ isPlay, audioSrc, isAudioPlay }) => {\r\n  const myPlayer = React.useRef<any>()\r\n  const onPlay = () => isAudioPlay(true)\r\n  const onPause = () => isAudioPlay(false)\r\n\r\n  React.useEffect(() => {\r\n    if (isPlay) {\r\n      return myPlayer.current.audio.current.play()\r\n    } else if (!isPlay) {\r\n      return myPlayer.current.audio.current.pause()\r\n    }\r\n  }, [isPlay])\r\n  return (\r\n    <div className=\"audio-player\">\r\n      <div className=\"container\">\r\n        <H5AudioPlayer\r\n          autoPlay={true}\r\n          ref={myPlayer}\r\n          src={audioSrc}\r\n          onPlay={onPlay}\r\n          onPause={onPause}\r\n          autoPlayAfterSrcChange={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsTypes => ({\r\n  isPlay: state.audio.isPlay,\r\n  audioSrc: state.audio.item\r\n})\r\nexport default connect<mapStateToPropsTypes, mapDispatchToProps, any, StateType>(mapStateToProps, { isAudioPlay: Actions.isPlay })(AudioPlayer)\r\n","import { AxiosResponse } from 'axios'\r\nimport axios from 'core'\r\nimport { BookType } from \"types\"\r\n\r\nexport type ResBooks = {\r\n  books: Array<BookType>\r\n  total: number\r\n}\r\nconst bookApi = {\r\n  getBook: ({ page = 1, search = '' }): Promise<AxiosResponse<any>> => axios.get(`/book?page=${page}&search=${search}`),\r\n  setBook: (book: any): Promise<AxiosResponse<ResBooks>> => axios.post(`/book/add`, book),\r\n  setBookComment: (postData: any): Promise<AxiosResponse<any>> => axios.post(`/book/addcomment`, postData),\r\n  getBookComment: (id: string): Promise<AxiosResponse<any>> => axios.post(`/book/comment`, { id })\r\n}\r\nexport default bookApi\r\n","import { ThunkDispatch } from 'redux-thunk'\r\nimport { InferActionsTypes, StateType } from 'redux/reducer'\r\nimport bookApi from 'utils/api/book'\r\nimport { BookType } from \"types\"\r\nimport { openNotification } from 'utils/helpers/openNotification'\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  setBooks: (payload: Array<BookType>) => ({\r\n    type: 'BOOKS@SET_ITEMS',\r\n    payload\r\n  } as const),\r\n  setTotalNumberBooks: (payload: number) => ({\r\n    type: 'BOOKS@SET_TOTAL_NUMBER_BOOKS',\r\n    payload\r\n  } as const),\r\n  setBooksLoader: (payload: boolean) => ({\r\n    type: 'BOOKS@IS_LOADER',\r\n    payload\r\n  } as const),\r\n  searchValue: (payload: string) => ({\r\n    type: 'BOOKS@SEARCH_VALUE',\r\n    payload\r\n  } as const),\r\n  addCountBook: (payload: string) => ({\r\n    type: 'BOOKS@ADD_COMMENT',\r\n    payload\r\n  } as const),\r\n  addCommentBookError: (payload: string) => ({\r\n    type: 'BOOKS@ADD_COMMENT_ERROR',\r\n    payload\r\n  } as const)\r\n}\r\n\r\nexport const fetchBooks = ({ page, search }: { page?: number, search?: string }) =>\r\n  async (dispatch: ThunkDispatch<StateType, {}, ActionsTypes>) => {\r\n    try {\r\n      dispatch(Actions.setBooksLoader(true))\r\n      const { data } = await bookApi.getBook({ page, search })\r\n      dispatch(Actions.setBooks(data.books))\r\n      dispatch(Actions.setTotalNumberBooks(data.total))\r\n      dispatch(Actions.setBooksLoader(false))\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        text: 'Произошла ошибка попробуйте ещё'\r\n      })\r\n    }\r\n  }\r\n","import { ThunkDispatch } from \"redux-thunk\"\r\nimport { InferActionsTypes, StateType } from \"redux/reducer\"\r\nimport { CommentsType } from \"types\"\r\nimport bookApi from \"utils/api/book\"\r\nimport { openNotification } from 'utils/helpers/openNotification'\r\n\r\nimport { Actions as ActionsBooks, ActionsTypes as ActionsBooksTypes } from 'redux/action/books'\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  isShowComments: (payload: boolean) => ({\r\n    type: 'COMMENTS@IS_SHOW',\r\n    payload\r\n  } as const),\r\n  setComments: (payload: Array<CommentsType>) => ({\r\n    type: 'COMMENTS@SET_ITEM',\r\n    payload\r\n  } as const),\r\n  setCommentId: (payload: string) => ({\r\n    type: 'COMMENTS@SET_ID',\r\n    payload\r\n  } as const),\r\n  addComment: (payload: CommentsType) => ({\r\n    type: 'COMMENTS@ADD_ITEM',\r\n    payload\r\n  } as const),\r\n  isLoader: (payload: boolean) => ({\r\n    type: 'COMMENTS@IS_LOADER',\r\n    payload\r\n  } as const)\r\n}\r\n\r\n\r\nexport const fetchComments = (id: string) => {\r\n  return async (dispatch: ThunkDispatch<StateType, {}, ActionsTypes | ActionsBooksTypes>, getState: () => StateType) => {\r\n    const isAuth = getState().user.isAuth\r\n    if (!isAuth) {\r\n      openNotification({\r\n        title: 'Ошибка',\r\n        text: 'Только овтаризованые пользователи могут оставлять коментарии',\r\n        type: 'warning'\r\n      })\r\n      const countMessage = getState().books.items.find(el => el._id === id)?.comments.length\r\n      if (!countMessage) {\r\n        return openNotification({\r\n          title: '',\r\n          text: 'Коментарий нет, ',\r\n          type: 'warning'\r\n        })\r\n      }\r\n    }\r\n\r\n    try {\r\n      dispatch(Actions.isShowComments(true))\r\n      dispatch(Actions.isLoader(true))\r\n      dispatch(Actions.setCommentId(id))\r\n      const { data } = await bookApi.getBookComment(id)\r\n      dispatch(Actions.setComments(data))\r\n      dispatch(Actions.isLoader(false))\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        text: 'Произошла ошибка попробуйте ещё fetchComments'\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const fetchAddComment = (text: string) => {\r\n  return async (dispatch: ThunkDispatch<StateType, {}, ActionsTypes | ActionsBooksTypes>, getState: () => StateType) => {\r\n    const { comments } = getState()\r\n    const createComment = {\r\n      bookId: comments.id,\r\n      text,\r\n    }\r\n    try {\r\n      const { data } = await bookApi.setBookComment(createComment)\r\n      console.log('response :', data)\r\n      dispatch(Actions.addComment(data))\r\n      dispatch(ActionsBooks.addCountBook(comments.id))\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        text: 'Произошла ошибка попробуйте ещё'\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Spin } from 'antd'\r\n\r\nconst style = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n}\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\" style={style}>\r\n     <Spin size=\"large\" />\r\n  </div>\r\n)\r\nexport default Loader","import React from \"react\"\r\nimport { StateType } from \"redux/reducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { Modal as ModalBase, Input, Button } from \"antd\"\r\nimport { Actions, fetchAddComment } from \"redux/action/comments\"\r\nimport { CommentsType } from \"types\"\r\nimport Loader from \"components/Loader\"\r\nimport { Comment } from \"components\"\r\nimport \"./Modal.scss\"\r\n\r\ntype StateProps = {\r\n  isShow: boolean\r\n  items: Array<CommentsType>\r\n  isAuth: boolean\r\n  isLoader: boolean\r\n}\r\ntype DispatchProps = {\r\n  isShowComments: (v: boolean) => void\r\n  fetchAddComment: (v: string) => void\r\n}\r\ntype Props = StateProps & DispatchProps\r\n\r\nconst Modal: React.FC<Props> = ({ isLoader, isShow, items, isAuth, isShowComments, fetchAddComment }) => {\r\n  const [value, setValue] = React.useState(\"\")\r\n\r\n  const handleOk = () => {\r\n    isShowComments(false)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    isShowComments(false)\r\n  }\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    fetchAddComment(value)\r\n    setValue(\"\")\r\n  }\r\n\r\n  return (\r\n    <ModalBase\r\n      title=\"Кометарии\"\r\n      visible={isShow}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={null}\r\n    >\r\n      {isLoader\r\n        ? <Loader />\r\n        : (items.map((item: CommentsType) => <Comment key={item._id} {...item} />))\r\n      }\r\n      {isAuth && (\r\n        <div style={{ display: \"flex\" }}>\r\n          <Input style={{ width: \"100%\" }} value={value} onChange={handleChange} />\r\n          <Button type=\"primary\" onClick={handleClick}>\r\n            Send\r\n            </Button>\r\n        </div>\r\n      )}\r\n    </ModalBase>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): StateProps => ({\r\n  items: state.comments.items,\r\n  isShow: state.comments.isShow,\r\n  isAuth: state.user.isAuth,\r\n  isLoader: state.comments.isLoader\r\n})\r\nconst mapDispatchToProps: DispatchProps = {\r\n  isShowComments: Actions.isShowComments,\r\n  fetchAddComment\r\n}\r\n\r\n\r\nexport default connect<StateProps, DispatchProps, any, StateType>(mapStateToProps, mapDispatchToProps)(Modal)\r\n","import React, { createElement, useState } from 'react'\r\nimport { Comment, Tooltip, Avatar } from 'antd'\r\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons'\r\nimport { CommentsType } from 'types'\r\n\r\nconst CommentBase: React.FC<CommentsType> = ({text, author}) => {\r\n  const [likes, setLikes] = useState(0);\r\n  const [dislikes, setDislikes] = useState(0);\r\n  const [action, setAction] = useState<null | string>(null)\r\n\r\n  const like = () => {\r\n    setLikes(1);\r\n    setDislikes(0);\r\n    setAction('liked');\r\n  };\r\n\r\n  const dislike = () => {\r\n    setLikes(0);\r\n    setDislikes(1);\r\n    setAction('disliked');\r\n  };\r\n\r\n  const actions = [\r\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={like}>\r\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\r\n        <span className=\"comment-action\">{likes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={dislike}>\r\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\r\n        <span className=\"comment-action\">{dislikes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n  ]\r\n  return (\r\n    <Comment\r\n      actions={actions}\r\n      author={author}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={\r\n        <p>\r\n         {text}\r\n        </p>\r\n      }\r\n     \r\n    />\r\n  );\r\n}\r\nexport default CommentBase","export default __webpack_public_path__ + \"static/media/play.b82a9267.svg\";","export default __webpack_public_path__ + \"static/media/stop.a64e0090.svg\";","import React from 'react'\r\n\r\nimport playIcon from 'assets/img/play.svg'\r\nimport stopIcon from 'assets/img/stop.svg'\r\nimport { StateType } from 'redux/reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Actions } from 'redux/action/audioPlayer'\r\n\r\nconst pathMp3 = require('assets/audio/as.mp3')\r\n\r\ntype Props = {\r\n  bookId: string\r\n}\r\n\r\nconst ButtonPlay: React.FC<Props> = ({ bookId }) => {\r\n  const audioPlayerId = useSelector((state: StateType) => state.audio.id)\r\n  const isPlay = useSelector((state: StateType) => state.audio.isPlay)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    if (bookId === audioPlayerId) {\r\n      dispatch(Actions.isPlay(!isPlay))\r\n      return\r\n    }\r\n    dispatch(Actions.setAudioBookId(bookId))\r\n    dispatch(Actions.setAudio(pathMp3.default))\r\n    dispatch(Actions.isPlay(true))\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick} className=\"audio\">\r\n      {bookId === audioPlayerId && isPlay ? (\r\n        <img src={stopIcon} alt=\"stop\" />\r\n      ) : (\r\n        <img src={playIcon} alt=\"play\" />\r\n      )}\r\n      <span>Воспроизвести</span>\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonPlay","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Actions as ActionsAudio } from 'redux/action/audioPlayer'\r\nimport { fetchComments } from 'redux/action/comments'\r\nimport { Article as ArticleBase } from 'components'\r\nimport { StateType } from 'redux/reducer'\r\nimport { BookType } from 'types'\r\n\r\n\r\ntype mapStateToPropsTypes = {\r\n  isAuth: boolean\r\n}\r\ntype mapDispatchToPropsTypes = {\r\n  isPlay: (v: boolean) => void\r\n  fetchComments: (v: string) => void\r\n  setAudio: (v: string) => void\r\n  setAudioBookId: (v: string) => void\r\n}\r\ntype OwnProps = BookType\r\n\r\ntype Props = mapStateToPropsTypes & mapDispatchToPropsTypes & OwnProps\r\n\r\n\r\nconst Article: React.FC<Props> = (props) => {\r\n  const {\r\n    _id,\r\n    isAuth,\r\n    comments,\r\n    name,\r\n    author,\r\n    imgUrl,\r\n    description,\r\n    fetchComments,\r\n  } = props\r\n\r\n  const visibleComment = (bookId: string) => {\r\n    fetchComments(bookId)\r\n  }\r\n\r\n  return (\r\n    <ArticleBase\r\n      id={_id}\r\n      name={name}\r\n      author={author}\r\n      imgUrl={imgUrl}\r\n      isAuth={isAuth}\r\n      description={description}\r\n      commentsSize={comments.length}\r\n      visibleComment={visibleComment}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsTypes => ({\r\n  isAuth: state.user.isAuth,\r\n})\r\n\r\nconst mapDispatchToProps: mapDispatchToPropsTypes = {\r\n  fetchComments,\r\n  isPlay: ActionsAudio.isPlay,\r\n  setAudio: ActionsAudio.setAudio,\r\n  setAudioBookId: ActionsAudio.setAudioBookId\r\n}\r\n\r\nexport default connect<mapStateToPropsTypes, mapDispatchToPropsTypes, OwnProps, StateType>(mapStateToProps, mapDispatchToProps)(Article)\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Pagination, BackTop } from 'antd'\r\nimport { Header } from 'components'\r\nimport { Article } from 'containers'\r\nimport { StateType } from 'redux/reducer'\r\nimport { Actions, fetchBooks } from 'redux/action/books'\r\n\r\n\r\nconst Home = () => {\r\n  const books = useSelector(({ books }: StateType) => books.items)\r\n  const total = useSelector(({ books }: StateType) => books.total)\r\n  const searchValue = useSelector(({ books }: StateType) => books.searchValue)\r\n  const [page, setPage] = React.useState(0)\r\n  const dispatch = useDispatch()\r\n\r\n  const onSearchBook = (value: string) => {\r\n    setPage(1)\r\n    dispatch(Actions.searchValue(value))\r\n  }\r\n  React.useEffect(() => {\r\n    dispatch(fetchBooks({ search: searchValue }))\r\n  }, [searchValue])\r\n\r\n  const handlePageClick = (page: number) => {\r\n    setPage(page)\r\n    dispatch(fetchBooks({ page: page - 1, search: searchValue }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header onSearchBook={onSearchBook} value={searchValue} />\r\n      <div className=\"container\">\r\n        <div className=\"articles\">\r\n          {\r\n            books.map((book: any, index: number) => <Article key={book._id} {...book} index={index} />)}\r\n          {total > 5 ? (\r\n            <Pagination\r\n              style={{ textAlign: 'center' }}\r\n              current={page}\r\n              defaultCurrent={1}\r\n              defaultPageSize={5}\r\n              total={total}\r\n              onChange={handlePageClick}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <BackTop />\r\n    </>\r\n  )\r\n}\r\nexport default Home\r\n","import { Form, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { FormField } from 'components'\r\nimport { FormikProps } from 'formik'\r\n\r\nexport type LoginFormValues = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst LoginForm = (props: FormikProps<LoginFormValues>) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting\r\n  } = props\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <div>\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <FormField\r\n            name=\"email\"\r\n            placeholder=\"E-Mail\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n          <FormField\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n\r\n          <Form.Item>\r\n            {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n            <Button\r\n              disabled={isSubmitting}\r\n              block={true}\r\n              htmlType='submit'\r\n              type=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Войти в аккаунт\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__register-link\" to=\"/signup\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","const validate = ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: (value) => {\r\n      if (!value) {\r\n        errors.email = \"Введите E-Mail\"\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неверный E-Mail\"\r\n      }\r\n    },\r\n    password: (value) => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\"\r\n      } else if (!isAuth && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)) {\r\n        errors.password = \"Слишком лёгкий пароль\"\r\n      }\r\n    },\r\n    password_2: (value) => {\r\n      if (!isAuth && value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\"\r\n      }\r\n    },\r\n    fullname: (value) => {\r\n      if (!isAuth && !value) {\r\n        errors.fullname = \"Укажите свое имя\"\r\n      }\r\n    }\r\n  }\r\n\r\n  Object.keys(values).forEach((key) => rules[key] && rules[key](values[key]))\r\n}\r\n\r\nexport default validate\r\n","import { withFormik } from 'formik'\r\nimport LoginForm from '../component'\r\nimport validateForm from 'utils/helpers/validate'\r\nimport { fetchUserLogin } from 'redux/action/user'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LoginFormWithFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    password: ''\r\n  }),\r\n  validate: values => {\r\n    let errors = {}\r\n    validateForm({ isAuth: true, values, errors })\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { props, setSubmitting, setErrors }) => {\r\n    //@ts-ignore\r\n    props.dispatch(fetchUserLogin(values)).catch(e => {\r\n      setErrors({ email: e.message, password: e.message })\r\n      setSubmitting(false)\r\n    })\r\n  },\r\n  displayName: 'LoginForm'\r\n})(LoginForm)\r\n\r\n\r\nconst LoginFormContainer = connect()(LoginFormWithFormik)\r\nexport default LoginFormContainer\r\n","import LoginForm from \"./container\"\r\nexport default LoginForm\r\n","import { Form, Button } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FormikProps } from \"formik\"\r\nimport { FormField } from \"components\"\r\n\r\ntype FormValues = {\r\n  email: string\r\n  fullname: string\r\n  password: string\r\n  password_2: string\r\n}\r\n\r\nconst RegisterForm = (props: FormikProps<FormValues>) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting\r\n  } = props\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <div>\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <FormField\r\n            name=\"email\"\r\n            placeholder=\"E-Mail\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n\r\n          <FormField\r\n            name=\"fullname\"\r\n            placeholder=\"Ваше имя\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n\r\n          <FormField\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            type=\"password\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n\r\n          <FormField\r\n            name=\"password_2\"\r\n            placeholder=\"Повторите пароль\"\r\n            type=\"password\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            touched={touched}\r\n            errors={errors}\r\n            values={values}\r\n          />\r\n\r\n          <Form.Item>\r\n            {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n            <Button\r\n              disabled={isSubmitting}\r\n              block={true}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onSubmit={handleSubmit}\r\n              size=\"large\"\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__register-link\" to=\"/signin\">\r\n            Войти в аккаунт\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import { withFormik } from 'formik'\r\nimport RegisterForm from '../component'\r\nimport validateForm from 'utils/helpers/validate'\r\nimport { fetchUserRegister } from 'redux/action/user'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst RegisterWidthFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    fullname: '',\r\n    password: '',\r\n    password_2: ''\r\n  }),\r\n  validate: values => {\r\n    let errors = {}\r\n    validateForm({ isAuth: false, values, errors })\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { props, setSubmitting, setErrors }) => {\r\n    console.log('props: ', props)\r\n    //@ts-ignore\r\n    props.dispatch(fetchUserRegister(values)).catch((e) => {\r\n      setErrors({ email: e.message })\r\n      setSubmitting(false)\r\n    })\r\n\r\n    setSubmitting(false)\r\n  },\r\n  displayName: 'RegisterForm'\r\n})(RegisterForm)\r\n\r\nconst RegisterFormContainer = connect()(RegisterWidthFormik)\r\nexport default RegisterFormContainer\r\n","import RegisterForm from \"./container\"\r\n\r\nexport default RegisterForm\r\n","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport LoginForm from \"./LoginForm\"\r\nimport RegisterForm from \"./RegisterForm\"\r\n\r\nimport \"./Auth.scss\"\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"auth__content\">\r\n        <Route exact path=\"/signin\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={RegisterForm} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Image } from 'antd'\r\nimport { StateType } from 'redux/reducer'\r\nimport { Typography } from 'antd'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Actions } from 'redux/action/books'\r\nimport { Header } from 'components'\r\nimport { updateAvatar } from 'redux/action/user'\r\nimport './Profile.scss'\r\n\r\nconst { Title } = Typography\r\n\r\nconst Profile = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const searchValue  = useSelector((state: StateType) => state.books.searchValue )\r\n  const SearchBook = (value: string) => {\r\n    dispatch(Actions.searchValue(value))\r\n     history.push(\"/\")\r\n  } \r\n  const avatar = useSelector((state: StateType) => state.user.data.avatar)\r\n  const userName = useSelector((state: StateType) => state.user.data.fullname)\r\n\r\n  const onChange = (e: any) => {\r\n    dispatch(updateAvatar(e.target.files[0]))\r\n  }\r\n \r\n  return  <>\r\n    <Header onSearchBook={ SearchBook } value={searchValue} />\r\n    <div className='container'>\r\n     <Card >\r\n        <div style={{display: 'flex'}}>\r\n          <div>\r\n          <Image\r\n                width={200}\r\n                src={avatar}\r\n              />\r\n              <Title level={2} >Изменить аватар</Title>\r\n              <input style={{display: 'block'}} type=\"file\" onChange={ onChange } />\r\n          </div>\r\n        <Title level={1}><span style={{fontSize: '20px'}}>Имя: </span>{userName}</Title>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <Title level={3}>Выбраные киниги:</Title>\r\n      </Card>\r\n     \r\n    </div>\r\n  </>\r\n \r\n}\r\n\r\n\r\nexport default Profile","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { Home, Auth, Profile } from 'page'\r\nimport { AudioPlayer, Modal } from './components'\r\nimport { StateType } from 'redux/reducer'\r\n\r\nimport './style/App.scss'\r\nimport { getUserProfile } from 'redux/action/user'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const isAuth = useSelector((state: StateType) => state.user.isAuth)\r\n  const isAudio = useSelector((state: StateType) => state.audio.id)\r\n  console.log(\"render - App\")\r\n  React.useEffect(() => {\r\n    dispatch(getUserProfile())\r\n  }, [dispatch])\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={['/signin', '/signup']}\r\n          render={() => (isAuth ? <Redirect to=\"/\" /> : <Auth />)}\r\n        />\r\n        <Route exact path={\"/profile\"} component={Profile} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n      {!!isAudio && <AudioPlayer />}\r\n      <Modal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/audioPlayer\"\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n  id: '',\r\n  item: \"\",\r\n  isPlay: false\r\n}\r\n\r\nexport const audio = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"AUDIO@SET_ID\":\r\n        draft.id = action.payload\r\n        break\r\n      case \"AUDIO@SET_ITEM\":\r\n        draft.item = action.payload\r\n        break\r\n      case \"AUDIO@IS_PLAY\":\r\n        draft.isPlay = action.payload\r\n        break\r\n      default:\r\n        return state\r\n    }\r\n  })\r\n}\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/user\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialUser = { id: '', avatar: '', fullname: \"\" }\r\nexport type ProfileTypes = {\r\n  id: string\r\n  avatar: string\r\n  fullname: string\r\n}\r\nconst initialState = {\r\n  isAuth: !!window.localStorage.token,\r\n  token: window.localStorage.getItem('token'),\r\n  data: initialUser as ProfileTypes\r\n}\r\n\r\nexport const user = (state = initialState, action: ActionsTypes): initialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case 'USER@IS_AUTH':\r\n        draft.isAuth = action.payload\r\n        break\r\n      case 'USER@SET_DATA':\r\n        const { user, token } = action.payload\r\n        draft.data = user\r\n        draft.token = token\r\n        break\r\n      case 'USER@LOG_OUT':\r\n        draft.data = initialUser\r\n        draft.token = ''\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/comments\"\r\nimport { CommentsType } from \"types\"\r\n\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n  id: \"\",\r\n  items: [] as Array<CommentsType>,\r\n  isShow: false,\r\n  isLoader: false\r\n}\r\n\r\n\r\n\r\nexport const comments = (state = initialState, action: ActionsTypes): initialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"COMMENTS@IS_SHOW\":\r\n        draft.isShow = action.payload\r\n        break\r\n      case \"COMMENTS@SET_ID\":\r\n        draft.id = action.payload\r\n        break\r\n      case \"COMMENTS@SET_ITEM\":\r\n        draft.items = action.payload\r\n        break\r\n      case \"COMMENTS@IS_LOADER\":\r\n        draft.isLoader = action.payload\r\n        break\r\n      case \"COMMENTS@ADD_ITEM\":\r\n        draft.items.push(action.payload)\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/books\"\r\nimport { BookType } from \"types\"\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n  items: [] as Array<BookType>,\r\n  total: 0,\r\n  searchValue: \"\",\r\n  isLoader: false\r\n}\r\n\r\nexport const books = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"BOOKS@SET_ITEMS\":\r\n        draft.items = action.payload\r\n        break\r\n      case \"BOOKS@IS_LOADER\":\r\n        draft.isLoader = action.payload\r\n        break\r\n      case \"BOOKS@SET_TOTAL_NUMBER_BOOKS\":\r\n        draft.total = action.payload\r\n        break\r\n      case \"BOOKS@SEARCH_VALUE\":\r\n        draft.searchValue = action.payload\r\n        break\r\n      case \"BOOKS@ADD_COMMENT\": {\r\n        const index = draft.items.findIndex(el => el._id === action.payload)\r\n        draft.items[index].comments.push(action.payload)\r\n        break\r\n      }\r\n      case \"BOOKS@ADD_COMMENT_ERROR\":\r\n        const index = draft.items.findIndex(el => el._id === action.payload)\r\n        draft.items[index].comments.pop()\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { audio } from './audio'\r\nimport { user } from './user'\r\nimport { comments } from './comments'\r\nimport { books } from './books'\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  audio,\r\n  comments,\r\n  books\r\n})\r\n\r\n\r\ntype rootReducerType = typeof rootReducer\r\nexport type StateType = ReturnType<rootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\n\r\nexport type InferActionsTypes<T extends { [key: string]: (...arg: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport default rootReducer\r\n\r\n","import { authStorage } from \"middleware\"\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducer\"\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk, authStorage]\r\n//@ts-ignore\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","import { StateType } from \"redux/reducer\"\r\nimport { ActionsTypes as ActionUser } from \"redux/action/user\"\r\nimport { Dispatch } from \"react\"\r\n\r\nexport const authStorage = (store: StateType) => (next: Dispatch<ActionUser>) => (action: ActionUser) => {\r\n  if (action.type === \"USER@SET_DATA\") {\r\n    const { token, user } = action.payload\r\n    window.axios.defaults.headers.authorization = `Bearer ${token}`\r\n    window.localStorage.setItem(\"token\", token)\r\n    window.localStorage.setItem(\"user\", JSON.stringify(user))\r\n  }\r\n  return next(action)\r\n}\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport App from \"./App\"\r\nimport store from \"./redux/store\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}