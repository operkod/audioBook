{"version":3,"sources":["assets/audio/as.mp3","redux/reducer/audio.ts","helpers/token.tsx","redux/reducer/user.ts","redux/reducer/comments.ts","redux/reducer/books.ts","redux/reducer/index.ts","redux/action/books.ts","api/index.tsx","api/book.ts","helpers/openNotification.ts","redux/saga/books.ts","redux/selectors/index.tsx","redux/action/comments.ts","redux/saga/comments.ts","redux/action/user.ts","api/user.ts","redux/saga/user.ts","redux/saga/index.ts","redux/store.ts","const/routers.tsx","assets/img/logo.svg","components/Header/index.tsx","redux/action/audioPlayer.ts","assets/img/comment.svg","assets/img/like-up.svg","assets/img/like.svg","components/Article/index.tsx","helpers/validateField.js","components/FormField/index.jsx","assets/img/author.svg","components/AuthorBlock/index.tsx","assets/img/user.svg","components/Menu/components/WebMenu.tsx","components/Menu/components/MobileMenu.tsx","components/Menu/index.tsx","components/AudioPlayer/index.tsx","components/Loader/index.tsx","components/Modal/index.tsx","components/Comment/index.tsx","assets/img/play.svg","assets/img/stop.svg","components/ButtonPlay/index.tsx","components/AppRouter/PrivateRoute.tsx","components/AppRouter/PublicRoute.tsx","page/Home/index.tsx","page/Profile/CardBook.tsx","page/Profile/index.tsx","page/Signin/component/index.tsx","helpers/validate.js","page/Signin/container/index.ts","page/Signin/index.ts","page/Signup/component/index.tsx","page/Signup/container/index.ts","page/Signup/index.ts","components/input/TextArea.tsx","page/AddBook/index.tsx","components/AppRouter/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["initialState","id","item","isPlay","TOKEN","setToken","value","localStorage","setItem","getToken","getItem","initialUser","avatar","fullname","isAuth","data","isLoader","items","isShow","total","searchValue","rootReducer","combineReducers","user","state","action","produce","draft","type","payload","audio","comments","push","books","index","findIndex","el","_id","pop","Actions","axios","defaults","baseURL","window","location","origin","getBook","page","search","get","setBookComment","postData","post","headers","authorization","getBookComment","openNotification","text","title","duration","notification","message","description","workerRequestBook","workerRequestAddBook","sagaWatcherBook","put","call","fakeApi","time","Promise","resolve","setTimeout","name","author","takeEvery","getAuth","getAvatar","getUserName","getAudioId","getPlay","getComments","getCommentsShow","getCommentsLoader","getCommentsCount","length","getBooks","getTotalBooks","getSearchValue","isShowComments","setComments","setCommentId","addComment","fetchComments","fetchAddComment","sagaWorkerComment","sagaWorkerAddComment","sagaWatcherComment","select","createComment","bookId","ActionsBooks","setIsAuth","setUserData","logOut","fetchAuthorization","fetchRegistration","userProfile","updateAvatar","getMe","signIn","signUp","savePhoto","photoFile","formData","FormData","append","workerLogout","workerAuthorization","workerRegistration","workerProfile","workerUpdateAvatar","watcherUser","removeItem","token","response","rootWatcher","all","saga","createSagaMiddleware","middleware","thunk","logger","store","createStore","applyMiddleware","run","getBase","getProfile","getSignin","getSignup","getAddBook","Search","Input","Header","history","useHistory","useSelector","dispatch","useDispatch","className","to","routers","src","logoIcon","alt","placeholder","onSearch","defaultValue","enterButton","setAudio","setAudioBookId","mapDispatchToProps","ActionsComments","ActionsAudio","connect","props","imgUrl","React","useState","activeLike","setLike","countLike","setCountLike","logo","valueStyle","fontSize","whiteSpace","prefix","onClick","like","likeUp","icon","commentIcon","validateField","key","touched","errors","FormField","handleChange","handleBlur","values","Item","validateStatus","help","hasFeedback","size","onChange","onBlur","AuthorBlock","style","classNames","authorIcon","WebMenu","overlay","danger","placement","userIcon","MobileMenu","block","width","innerWidth","Menu","showMenu","setShowMenu","handleResize","useCallback","clientWidth","document","body","useEffect","addEventListener","removeEventListener","AudioPlayer","myPlayer","useRef","audioSrc","current","play","pause","autoPlay","ref","onPlay","onPause","autoPlayAfterSrcChange","display","justifyContent","alignItems","Loader","setValue","visible","onOk","onCancel","footer","map","Comment","e","target","CommentBase","likes","setLikes","dislikes","setDislikes","setAction","actions","createElement","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","content","pathMp3","require","ButtonPlay","audioPlayerId","default","stopIcon","playIcon","PrivateRoute","Component","component","rest","exact","path","render","PublicRoute","Home","setPage","book","height","textAlign","fontWeight","defaultCurrent","defaultPageSize","CardBook","marginLeft","Title","Typography","Profile","userName","level","ActionsUser","files","LoginForm","handleSubmit","isValid","isSubmitting","onSubmit","disabled","htmlType","validate","rules","email","test","password","password_2","Object","keys","forEach","LoginFormWithFormik","withFormik","enableReinitialize","mapPropsToValues","validateForm","displayName","RegisterForm","RegisterWidthFormik","setSubmitting","setErrors","TextArea","InputText","error","minRows","maxRows","label","styleProp","cn","autoSize","initValue","AddBook","formaData","setFormData","setError","event","prev","preventDefault","checkFillingInput","entries","reduce","acc","AppRouters","isAudio","showModal","Signin","Signup","App","AppRouter","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d6bcad6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/as.75695496.mp3\";","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/audioPlayer\"\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n  id: '',\r\n  item: \"\",\r\n  isPlay: false\r\n}\r\n\r\nexport const audio = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"AUDIO@SET_ID\":\r\n        draft.id = action.payload\r\n        break\r\n      case \"AUDIO@SET_ITEM\":\r\n        draft.item = action.payload\r\n        break\r\n      case \"AUDIO@IS_PLAY\":\r\n        draft.isPlay = action.payload\r\n        break\r\n      default:\r\n        return state\r\n    }\r\n  })\r\n}\r\n","const TOKEN = 'X-AuthToken'\r\nconst USER_NAME = 'name'\r\n\r\nconst setToken = (value: string) => localStorage.setItem(TOKEN, value)\r\nconst getToken = () => localStorage.getItem(TOKEN)\r\nconst removeToken = () => localStorage.removeItem(TOKEN)\r\n\r\nconst setUserName = (value: string) => localStorage.setItem(USER_NAME, value)\r\nconst getUserName = () => localStorage.getItem(USER_NAME)\r\nconst removeUsername = () => localStorage.removeItem(USER_NAME)\r\n\r\nexport { setToken, getToken, removeToken, setUserName, getUserName, removeUsername }","import { getToken } from 'helpers/token'\r\nimport produce from 'immer'\r\nimport { ActionsTypes } from 'redux/action/user'\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialUser = { id: '', avatar: '', fullname: '' }\r\nexport type ProfileTypes = {\r\n  id: string\r\n  avatar: string\r\n  fullname: string\r\n}\r\nconst initialState = {\r\n  isAuth: !!getToken(),\r\n  data: initialUser as ProfileTypes,\r\n  isLoader: false\r\n}\r\n\r\nexport const user = (state = initialState, action: ActionsTypes): initialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case 'USER@IS_AUTH':\r\n        draft.isAuth = action.payload\r\n        break\r\n      case 'USER@SET_DATA':\r\n        draft.data = action.payload\r\n        break\r\n      case 'USER@LOG_OUT':\r\n        draft.data = initialUser\r\n        break\r\n      case 'USER@LOADER':\r\n        draft.isLoader = action.payload\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/comments\"\r\nimport { CommentsType } from \"types\"\r\n\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n  id: \"\",\r\n  items: [] as Array<CommentsType>,\r\n  isShow: false,\r\n  isLoader: false\r\n}\r\n\r\nexport const comments = (state = initialState, action: ActionsTypes): initialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"COMMENTS@IS_SHOW\":\r\n        draft.isShow = action.payload\r\n        break\r\n      case \"COMMENTS@SET_ID\":\r\n        draft.id = action.payload\r\n        break\r\n      case \"COMMENTS@SET_ITEM\":\r\n        draft.items = action.payload\r\n        break\r\n      case \"COMMENTS@IS_LOADER\":\r\n        draft.isLoader = action.payload\r\n        break\r\n      case \"COMMENTS@ADD_ITEM\":\r\n        draft.items.push(action.payload)\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import produce from \"immer\"\r\nimport { ActionsTypes } from \"redux/action/books\"\r\nimport { BookType } from \"types\"\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n  items: [] as Array<BookType>,\r\n  total: 0,\r\n  searchValue: \"\",\r\n  isLoader: false\r\n}\r\n\r\nexport const books = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case \"BOOKS@SET_ITEMS\":\r\n        draft.items = action.payload\r\n        break\r\n      case \"BOOKS@IS_LOADER\":\r\n        draft.isLoader = action.payload\r\n        break\r\n      case \"BOOKS@SET_TOTAL_NUMBER_BOOKS\":\r\n        draft.total = action.payload\r\n        break\r\n      case \"BOOKS@SEARCH_VALUE\":\r\n        draft.searchValue = action.payload\r\n        break\r\n      case \"BOOKS@ADD_COMMENT\": {\r\n        const index = draft.items.findIndex(el => el._id === action.payload)\r\n        draft.items[index].comments.push(action.payload)\r\n        break\r\n      }\r\n      case \"BOOKS@ADD_COMMENT_ERROR\":\r\n        const index = draft.items.findIndex(el => el._id === action.payload)\r\n        draft.items[index].comments.pop()\r\n        break\r\n      default:\r\n    }\r\n  })\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { audio } from './audio'\r\nimport { user } from './user'\r\nimport { comments } from './comments'\r\nimport { books } from './books'\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  audio,\r\n  comments,\r\n  books\r\n})\r\n\r\ntype rootReducerType = typeof rootReducer\r\nexport type StateType = ReturnType<rootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\n\r\nexport type InferActionsTypes<T extends { [key: string]: (...arg: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport default rootReducer\r\n\r\n","import { InferActionsTypes } from 'redux/reducer'\r\nimport { AddBookType, BookType } from 'types'\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  setBooks: (payload: Array<BookType>) => ({\r\n    type: 'BOOKS@SET_ITEMS',\r\n    payload\r\n  } as const),\r\n  setTotalNumberBooks: (payload: number) => ({\r\n    type: 'BOOKS@SET_TOTAL_NUMBER_BOOKS',\r\n    payload\r\n  } as const),\r\n  setBooksLoader: (payload: boolean) => ({\r\n    type: 'BOOKS@IS_LOADER',\r\n    payload\r\n  } as const),\r\n  searchValue: (payload: string) => ({\r\n    type: 'BOOKS@SEARCH_VALUE',\r\n    payload\r\n  } as const),\r\n  addCountBook: (payload: string) => ({\r\n    type: 'BOOKS@ADD_COMMENT',\r\n    payload\r\n  } as const),\r\n  addCommentBookError: (payload: string) => ({\r\n    type: 'BOOKS@ADD_COMMENT_ERROR',\r\n    payload\r\n  } as const),\r\n  requestBook: (payload: { page?: number, search?: string }) => ({\r\n    type: 'BOOKS@REQUEST_BOOK',\r\n    payload\r\n  } as const),\r\n  requestAddBook: (payload: AddBookType) => ({\r\n    type: 'BOOKS@REQUEST_ADD_BOOK',\r\n    payload\r\n  } as const),\r\n  responseAddBook: (payload: AddBookType) => ({\r\n    type: 'BOOKS@RESPONSE_ADD_BOOK',\r\n    payload\r\n  } as const),\r\n}\r\n\r\n\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = window.location.origin\r\n\r\nexport default axios","import { AxiosResponse } from 'axios'\r\nimport axios from './'\r\nimport { BookType } from \"types\"\r\nimport { getToken } from 'helpers/token'\r\n\r\nexport type ResBooks = {\r\n  books: Array<BookType>\r\n  total: number\r\n}\r\nexport type ResComment = {\r\n  _id: string\r\n  author: string\r\n  text: string\r\n}\r\n\r\nconst getBook = ({ page = 1, search = '' }): Promise<AxiosResponse<ResBooks>> => axios.get(`/book?page=${page}&search=${search}`)\r\n\r\nconst setBook = (book: any): Promise<AxiosResponse<ResBooks>> => axios.post(`/book/add`, book, {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\n\r\nconst setBookComment = (postData: any): Promise<AxiosResponse<any>> => axios.post(`/book/addcomment`, postData, {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\n\r\nconst getBookComment = (id: string): Promise<AxiosResponse<Array<ResComment>>> => axios.post(`/book/comment`, { id }, {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\n\r\nexport { getBook, setBook, setBookComment, getBookComment }\r\n","import { notification } from 'antd'\r\ntype Types = {\r\n  text: string\r\n  type?: 'info' | 'error' | 'warning' | 'success'\r\n  title?: string\r\n  duration?: number\r\n}\r\nexport const openNotification = ({ text, type = 'info', title, duration = 3 }: Types) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration\r\n  })\r\n","import { Actions } from 'redux/action/books'\r\nimport { getBook } from 'api/book'\r\nimport { openNotification } from 'helpers/openNotification'\r\nimport { put, call, takeEvery } from '@redux-saga/core/effects'\r\nimport { AddBookType } from 'types'\r\n\r\nfunction* workerRequestBook(action: any) {\r\n  try {\r\n    yield put(Actions.setBooksLoader(true))\r\n    const { data } = yield call(getBook, action.payload)\r\n    yield put(Actions.setBooks(data.books))\r\n    yield put(Actions.setTotalNumberBooks(data.total))\r\n    yield put(Actions.setBooksLoader(false))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      text: 'Произошла ошибка попробуйте ещё'\r\n    })\r\n  }\r\n}\r\n\r\nfunction fakeApi(time: number) {\r\n  return new Promise((resolve) => setTimeout(() => resolve({ data: { name: '', author: '', description: '' }, time })))\r\n}\r\n\r\nfunction* workerRequestAddBook(action: { type: string, payload: AddBookType }) {\r\n  try {\r\n    const data: AddBookType = yield call(fakeApi, 2000)\r\n    yield put(Actions.responseAddBook(data))\r\n\r\n  } catch (e) {\r\n\r\n  }\r\n}\r\n\r\nexport function* sagaWatcherBook() {\r\n  yield takeEvery('BOOKS@REQUEST_BOOK', workerRequestBook)\r\n  yield takeEvery('BOOKS@REQUEST_ADD_BOOK', workerRequestAddBook)\r\n}","import { StateType } from 'redux/reducer'\r\n\r\nconst getAuth = (state: StateType) => state.user.isAuth\r\n\r\nconst getAvatar = (state: StateType) => state.user.data?.avatar\r\nconst getUserName = (state: StateType) => state.user.data?.fullname\r\n\r\nconst getAudioId = (state: StateType) => state.audio.id\r\nconst getPlay = (state: StateType) => state.audio.isPlay\r\nconst getAudioSrc = (state: StateType) => state.audio.item\r\n\r\nconst getComments = (state: StateType) => state.comments.items\r\nconst getCommentsShow = (state: StateType) => state.comments.isShow\r\nconst getCommentsLoader = (state: StateType) => state.comments.isLoader\r\nconst getCommentsCount = (state: StateType) => state.comments.items.length\r\n\r\nconst getBooks = (state: StateType) => state.books.items\r\nconst getTotalBooks = (state: StateType) => state.books.total\r\nconst getSearchValue = (state: StateType) => state.books.searchValue\r\n\r\nexport {\r\n  getAuth,\r\n  getAudioId,\r\n  getPlay,\r\n  getAudioSrc,\r\n  getAvatar,\r\n  getComments,\r\n  getCommentsShow,\r\n  getCommentsLoader,\r\n  getBooks,\r\n  getTotalBooks,\r\n  getSearchValue,\r\n  getUserName,\r\n  getCommentsCount,\r\n}","import { InferActionsTypes } from \"redux/reducer\"\r\nimport { CommentsType } from \"types\"\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  isShowComments: (payload: boolean) => ({\r\n    type: 'COMMENTS@IS_SHOW',\r\n    payload\r\n  } as const),\r\n  setComments: (payload: Array<CommentsType>) => ({\r\n    type: 'COMMENTS@SET_ITEM',\r\n    payload\r\n  } as const),\r\n  setCommentId: (payload: string) => ({\r\n    type: 'COMMENTS@SET_ID',\r\n    payload\r\n  } as const),\r\n  addComment: (payload: CommentsType) => ({\r\n    type: 'COMMENTS@ADD_ITEM',\r\n    payload\r\n  } as const),\r\n  isLoader: (payload: boolean) => ({\r\n    type: 'COMMENTS@IS_LOADER',\r\n    payload\r\n  } as const),\r\n  fetchComments: (payload: string) => ({\r\n    type: \"COMMENT@REQUEST_ITEM\",\r\n    payload\r\n  } as const),\r\n  fetchAddComment: (payload: string) => ({\r\n    type: \"COMMENT@REQUEST_ADD_ITEM\",\r\n    payload\r\n  } as const)\r\n}\r\n","import { getBookComment, setBookComment } from 'api/book'\r\nimport { openNotification } from 'helpers/openNotification'\r\nimport { Actions as ActionsBooks } from 'redux/action/books'\r\nimport { call, put, select, takeEvery } from '@redux-saga/core/effects'\r\nimport { getAuth, getCommentsCount } from 'redux/selectors'\r\nimport { Actions } from 'redux/action/comments'\r\n\r\nfunction* sagaWorkerComment(action: { type: string, payload: string }) {\r\n  const isAuth: boolean = yield select(getAuth)\r\n  if (!isAuth) {\r\n    openNotification({\r\n      title: 'Ошибка',\r\n      text: 'Только овтаризованые пользователи могут оставлять коментарии',\r\n      type: 'warning'\r\n    })\r\n    const countMessage: number = yield select(getCommentsCount)\r\n\r\n    if (countMessage < 0) {\r\n      return openNotification({\r\n        title: 'Ошибкa',\r\n        text: 'Коментарий нет, ',\r\n        type: 'warning'\r\n      })\r\n    }\r\n  }\r\n\r\n  try {\r\n    yield put(Actions.isShowComments(true))\r\n    yield put(Actions.isLoader(true))\r\n    yield put(Actions.setCommentId(action.payload))\r\n    const { data } = yield call(getBookComment, action.payload)\r\n    yield put(Actions.setComments(data))\r\n    yield put(Actions.isLoader(false))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      text: 'Произошла ошибка попробуйте ещё'\r\n    })\r\n    yield put(Actions.isShowComments(false))\r\n    yield put(Actions.isLoader(false))\r\n  }\r\n}\r\n\r\n\r\nfunction* sagaWorkerAddComment(action: any) {\r\n  const { comments } = yield select()\r\n  const createComment = {\r\n    bookId: comments.id,\r\n    text: action.payload\r\n  }\r\n  try {\r\n    const { data } = yield call(setBookComment, createComment)\r\n    yield put(Actions.addComment(data))\r\n    yield put(ActionsBooks.addCountBook(comments.id))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      text: 'Произошла ошибка попробуйте при отправки сообщения '\r\n    })\r\n  }\r\n}\r\n\r\nexport function* sagaWatcherComment() {\r\n  yield takeEvery(\"COMMENT@REQUEST_ADD_ITEM\", sagaWorkerAddComment)\r\n  yield takeEvery(\"COMMENT@REQUEST_ITEM\", sagaWorkerComment)\r\n\r\n}","import { InferActionsTypes } from 'redux/reducer'\r\nimport { ResponseAuth } from 'api/user'\r\nimport { LoginFormType, RegistrationFormType } from 'types'\r\nimport { ProfileTypes } from 'redux/reducer/user'\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nconst Actions = {\r\n  isLoader: (payload: boolean) => ({\r\n    type: 'USER@LOADER',\r\n    payload\r\n  } as const),\r\n  setIsAuth: (payload: boolean) => ({\r\n    type: 'USER@IS_AUTH',\r\n    payload\r\n  } as const),\r\n  setUserData: (payload: ProfileTypes) => ({\r\n    type: 'USER@SET_DATA',\r\n    payload\r\n  } as const),\r\n  logOut: () => ({\r\n    type: 'USER@LOG_OUT',\r\n  } as const),\r\n  fetchAuthorization: (payload: LoginFormType) => ({\r\n    type: 'USER@AUTHORIZATION',\r\n    payload\r\n  } as const),\r\n  fetchRegistration: (payload: RegistrationFormType) => ({\r\n    type: 'USER@REGISTRATION',\r\n    payload\r\n  } as const),\r\n  userProfile: () => ({\r\n    type: 'USER@PROFILE',\r\n  } as const),\r\n  updateAvatar: (payload: any) => ({\r\n    type: 'USER@UPDATE_AVATAR',\r\n    payload\r\n  } as const),\r\n}\r\n\r\nexport default Actions\r\n","import { AxiosResponse } from 'axios'\r\nimport { getToken } from 'helpers/token'\r\nimport axios from './'\r\n\r\nexport type UserDate = {\r\n  id: string\r\n  avatar: string\r\n  fullname: string\r\n}\r\n\r\nexport type ResponseAuth = {\r\n  token: string\r\n  user: UserDate\r\n}\r\nexport type signInType = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst getMe = (): Promise<AxiosResponse<ResponseAuth>> => axios.get('/user/getme', {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\nconst signIn = (postData: signInType): Promise<AxiosResponse<ResponseAuth>> => axios.post('/user/signin', postData, {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\nconst signUp = (postData: any): Promise<AxiosResponse<ResponseAuth>> => axios.post('/user/signup', postData, {\r\n  headers: {\r\n    authorization: `Bearer ${getToken()}`\r\n  }\r\n})\r\nconst savePhoto = (photoFile: any): Promise<AxiosResponse<any>> => {\r\n  const formData = new FormData()\r\n  formData.append(\"image\", photoFile)\r\n  return axios.post('user/photo', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      authorization: `Bearer ${getToken()}`\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport { getMe, signIn, signUp, savePhoto }\r\n","import Actions from 'redux/action/user'\r\nimport { openNotification } from 'helpers/openNotification'\r\nimport { put, call, takeEvery } from '@redux-saga/core/effects'\r\nimport { removeToken, setToken } from 'helpers/token'\r\nimport { LoginFormType } from 'types'\r\nimport { getMe, savePhoto, signIn, signUp } from 'api/user'\r\n\r\nfunction* workerLogout() {\r\n  yield removeToken()\r\n  yield put(Actions.setIsAuth(false))\r\n}\r\n\r\nfunction* workerAuthorization(action: { type: string, payload: LoginFormType }) {\r\n  yield put(Actions.isLoader(true))\r\n  try {\r\n    const { data } = yield call(signIn, action.payload)\r\n    yield setToken(data.token)\r\n    yield put(Actions.setUserData(data.user))\r\n    yield put(Actions.setIsAuth(true))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      title: 'Authorization',\r\n      text: e.response.data.message\r\n    })\r\n  } finally {\r\n    yield put(Actions.isLoader(false))\r\n  }\r\n}\r\n\r\nfunction* workerRegistration(action: any) {\r\n  yield put(Actions.isLoader(true))\r\n  try {\r\n    const { data } = yield call(signUp, action.payload)\r\n    yield setToken(data.token)\r\n    yield put(Actions.setUserData(data.user))\r\n    yield put(Actions.setIsAuth(true))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      title: 'Registration',\r\n      text: e.response.data.message\r\n    })\r\n  } finally {\r\n    yield put(Actions.isLoader(false))\r\n  }\r\n}\r\n\r\nfunction* workerProfile() {\r\n  try {\r\n    const { data } = yield call(getMe)\r\n    yield setToken(data.token)\r\n    yield put(Actions.setUserData(data.user))\r\n    yield put(Actions.setIsAuth(true))\r\n  } catch (e) {\r\n    yield put(Actions.logOut())\r\n  }\r\n}\r\n\r\nfunction* workerUpdateAvatar(action: any) {\r\n  try {\r\n    const { data } = yield call(savePhoto, action.payload)\r\n    yield put(Actions.setUserData(data.user))\r\n  } catch (e) {\r\n    openNotification({\r\n      type: 'error',\r\n      title: 'Avatar',\r\n      text: 'ошибка при сохранение авата, попробуйте ещо раз'\r\n    })\r\n  }\r\n}\r\n\r\nexport function* watcherUser() {\r\n  yield takeEvery('USER@LOG_OUT', workerLogout)\r\n  yield takeEvery('USER@AUTHORIZATION', workerAuthorization)\r\n  yield takeEvery('USER@REGISTRATION', workerRegistration)\r\n  yield takeEvery('USER@PROFILE', workerProfile)\r\n  yield takeEvery('USER@UPDATE_AVATAR', workerUpdateAvatar)\r\n}","import { all } from '@redux-saga/core/effects'\r\nimport { sagaWatcherBook } from './books'\r\nimport { sagaWatcherComment } from './comments'\r\nimport { watcherUser } from './user'\r\n\r\nexport function* rootWatcher() {\r\n  yield all([sagaWatcherBook(), sagaWatcherComment(), watcherUser()])\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootReducer from './reducer'\r\nimport { rootWatcher } from './saga'\r\nimport logger from 'redux-logger'\r\n\r\nconst saga = createSagaMiddleware()\r\n\r\nconst middleware = [thunk, saga, logger]\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware))\r\n\r\nsaga.run(rootWatcher)\r\n\r\nexport default store\r\n","const base: string = '/'\r\nconst profile: string = '/profile'\r\nconst signin: string = '/signin'\r\nconst signup: string = '/signup'\r\nconst addBook: string = '/add'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getBase: () => base,\r\n  getProfile: () => profile,\r\n  getSignin: () => signin,\r\n  getSignup: () => signup,\r\n  getAddBook: () => addBook,\r\n}","export default __webpack_public_path__ + \"static/media/logo.51a0411d.svg\";","import './Header.scss'\r\nimport { Input } from 'antd'\r\nimport { Menu } from 'components'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getSearchValue } from 'redux/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Actions } from 'redux/action/books'\r\n\r\nimport logoIcon from 'assets/img/logo.svg'\r\nimport routers from 'const/routers'\r\n\r\nconst { Search } = Input\r\n\r\nconst Header = () => {\r\n  const history = useHistory()\r\n  const value = useSelector(getSearchValue)\r\n  const dispatch = useDispatch()\r\n  const handleSearch = (value: string) => {\r\n    dispatch(Actions.requestBook({ search: value }))\r\n    history.push(routers.getBase())\r\n  }\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-content__logo\">\r\n            <Link to={routers.getBase()}><img src={logoIcon} alt=\"Books\" /></Link>\r\n          </div>\r\n          <div className=\"search\">\r\n            <Search\r\n              placeholder=\"Название книги или афтора\"\r\n              onSearch={handleSearch}\r\n              defaultValue={value}\r\n              enterButton\r\n            />\r\n          </div>\r\n          <div className=\"nav\">\r\n            <Menu />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header\r\n","import { Dispatch } from \"redux\"\r\nimport { InferActionsTypes } from \"redux/reducer\"\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof Actions>\r\n\r\nexport const Actions = {\r\n  setAudio: (payload: string) => ({\r\n    type: 'AUDIO@SET_ITEM',\r\n    payload\r\n  } as const),\r\n  setAudioBookId: (payload: string) => ({\r\n    type: 'AUDIO@SET_ID',\r\n    payload\r\n  } as const),\r\n  isPlay: (payload: boolean) => ({\r\n    type: 'AUDIO@IS_PLAY',\r\n    payload\r\n  } as const),\r\n}\r\nexport const fetchAudio = (audioId: string) => (dispatch: Dispatch<ActionsTypes>) => {\r\n  // audioApi.getAudio(audioId).then(({ data }) => {\r\n  //   dispatch(Actions.setAudio(data.audio))\r\n  //   dispatch(Actions.setAudioLoader(false))\r\n  // })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/comment.df5e7701.svg\";","export default __webpack_public_path__ + \"static/media/like-up.0fd910a4.svg\";","export default __webpack_public_path__ + \"static/media/like.3202d8c4.svg\";","import './Article.scss'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Actions as ActionsAudio } from 'redux/action/audioPlayer'\r\nimport { Actions as ActionsComments } from 'redux/action/comments'\r\nimport { AuthorBlock, ButtonPlay } from 'components'\r\nimport { openNotification } from 'helpers/openNotification'\r\nimport { getAuth } from 'redux/selectors'\r\nimport commentIcon from 'assets/img/comment.svg'\r\nimport { Statistic } from 'antd'\r\n\r\nimport logo from 'assets/img/logo.svg'\r\nimport like from 'assets/img/like-up.svg'\r\nimport likeUp from 'assets/img/like.svg'\r\nimport { StateType } from 'redux/reducer'\r\n\r\ntype mapStateToPropsTypes = {\r\n  isAuth: boolean\r\n}\r\ntype mapDispatchToPropsTypes = {\r\n  isPlay: (v: boolean) => void\r\n  fetchComments: (v: string) => void\r\n}\r\n\r\ntype Props = mapStateToPropsTypes & mapDispatchToPropsTypes & OwnProps\r\n\r\ntype OwnProps = {\r\n  _id: string\r\n  name?: string\r\n  author?: string\r\n  imgUrl?: string\r\n  description?: string\r\n  audioId?: string\r\n  comments: []\r\n}\r\n\r\nconst Article: React.FC<Props> = (props) => {\r\n  const {\r\n    _id,\r\n    name,\r\n    author,\r\n    imgUrl,\r\n    description,\r\n    comments,\r\n    isAuth,\r\n    fetchComments,\r\n  } = props\r\n\r\n  const [activeLike, setLike] = React.useState(false)\r\n  const [countLike, setCountLike] = React.useState<number>(0)\r\n\r\n  const handleClick = () => fetchComments(_id)\r\n\r\n  const handleLike = () => {\r\n    if (!isAuth) {\r\n      return openNotification({\r\n        type: 'warning',\r\n        text: 'Зарегистрируйтесь, чтобы оставить лайк'\r\n      })\r\n    }\r\n    setLike(!activeLike)\r\n    if (activeLike) setCountLike(countLike - 1)\r\n    else setCountLike(countLike + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      <div className=\"article-left\">\r\n        <div className=\"article-img\">\r\n          <img src={imgUrl || logo} alt={name} />\r\n        </div>\r\n      </div>\r\n      <div className=\"article-description\">\r\n        <div className=\"article-description__body\">\r\n          <div className='body-wrap' >\r\n            <h2 className=\"article-description__body-title\">{name}</h2>\r\n            <Statistic valueStyle={{ fontSize: '20px', whiteSpace: 'nowrap' }} value={countLike} prefix={\r\n              <img className='article-description__body-like' onClick={handleLike} src={activeLike ? like : likeUp} alt=\"like\" />\r\n            }\r\n            />\r\n          </div>\r\n          <p className=\"article-description__body-text\">{description}</p>\r\n        </div>\r\n        <AuthorBlock name={author}\r\n        />\r\n        <div className=\"article-description__footer\">\r\n          <ButtonPlay bookId={_id} />\r\n          <AuthorBlock\r\n            className=\"center\"\r\n            name={!!comments.length ? `${comments.length} коментария` : 'нет коментариев'}\r\n            icon={commentIcon}\r\n            onClick={handleClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateToPropsTypes => ({\r\n  isAuth: getAuth(state),\r\n})\r\n\r\nconst mapDispatchToProps: mapDispatchToPropsTypes = {\r\n  fetchComments: ActionsComments.fetchComments,\r\n  isPlay: ActionsAudio.isPlay,\r\n}\r\n\r\n\r\nexport default connect<mapStateToPropsTypes, mapDispatchToPropsTypes, OwnProps, StateType>(mapStateToProps, mapDispatchToProps)(Article)\r\n\r\n","const validateField = (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return \"error\"\r\n    } else {\r\n      return \"success\"\r\n    }\r\n  } else {\r\n    return \"\"\r\n  }\r\n}\r\n\r\nexport default validateField\r\n","import {Form, Input} from 'antd'\r\nimport validateField from 'helpers/validateField'\r\n\r\nconst FormField = props => {\r\n  const {name, placeholder, type, handleChange, handleBlur, touched, errors, values} = props\r\n  return (\r\n    <Form.Item\r\n      validateStatus={validateField(name, touched, errors)}\r\n      help={!touched[name] ? null : errors[name]}\r\n      hasFeedback\r\n    >\r\n      <Input\r\n        id={name}\r\n        size=\"large\"\r\n        placeholder={placeholder}\r\n        value={values[name]}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\nexport default FormField\r\n","export default __webpack_public_path__ + \"static/media/author.d1370a05.svg\";","import React from 'react'\r\nimport authorIcon from 'assets/img/author.svg'\r\nimport classNames from \"classnames\"\r\n\r\nimport './AuthorBlock.scss'\r\n\r\ntype props = {\r\n  name?: string\r\n  onClick?: () => void\r\n  icon?: string\r\n  className?: string\r\n  style?: any\r\n}\r\n\r\n\r\nconst AuthorBlock: React.FC<props> = ({ onClick, name, icon, className, style }) => (\r\n  <div className={classNames(\"author\", { [`${className}`]: !!className })} onClick={onClick} style={style}>\r\n    <div className=\"author-img\">\r\n      <img src={icon || authorIcon} alt={name} />\r\n    </div>\r\n    <div className=\"author-name\">{name}</div>\r\n  </div>\r\n)\r\n\r\nexport default AuthorBlock\r\n","export default __webpack_public_path__ + \"static/media/user.4a895b67.svg\";","\r\nimport { Menu as MenuAntd, Dropdown, Avatar, Button, } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Actions from 'redux/action/user'\r\nimport { MenuProps } from 'components/Menu'\r\nimport routers from 'const/routers'\r\n\r\nimport userIcon from 'assets/img/user.svg'\r\n\r\nexport const WebMenu: React.FC<MenuProps> = ({ isAuth, avatar }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <>\r\n      {!isAuth\r\n        ? <>\r\n          <Link to={routers.getSignin()}>\r\n            <Button type=\"primary\">Войти</Button>\r\n          </Link>\r\n          <Link to={routers.getSignup}>\r\n            <Button type=\"primary\">Зарегестрироватся</Button>\r\n          </Link>\r\n        </>\r\n        : <Dropdown overlay={\r\n          <MenuAntd>\r\n            <MenuAntd.Item>\r\n              <Link className=\"nav-link\" to={routers.getAddBook()}>Добавить книгу</Link>\r\n            </MenuAntd.Item>\r\n            <MenuAntd.Item>\r\n              <Link to={routers.getProfile()}>Profile</Link>\r\n            </MenuAntd.Item>\r\n            <MenuAntd.Item onClick={() => dispatch(Actions.logOut())} danger>\r\n              Выйти\r\n            </MenuAntd.Item>\r\n          </MenuAntd>\r\n        } placement=\"bottomRight\">\r\n          <Avatar className=\"avatar\" size=\"large\" icon={<img src={avatar || userIcon} alt=\"UserAvatar\" />} />\r\n        </Dropdown>\r\n      }\r\n    </>\r\n  )\r\n}","\r\nimport { Menu as MenuAntd, Dropdown, Avatar, Button } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Actions from 'redux/action/user'\r\nimport { MenuProps } from 'components/Menu'\r\nimport routers from 'const/routers'\r\n\r\nimport userIcon from 'assets/img/user.svg'\r\n\r\nexport const MobileMenu: React.FC<MenuProps> = ({ isAuth, avatar }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <MenuAntd>\r\n      {!isAuth\r\n        ? <>\r\n          <Dropdown overlay={\r\n            <>\r\n              <MenuAntd.Item>\r\n                <Link to={routers.getSignin()}>\r\n                  <Button block={true} type=\"primary\">Войти</Button>\r\n                </Link>\r\n              </MenuAntd.Item>\r\n              <MenuAntd.Item>\r\n                <Link to={routers.getSignup()}>\r\n                  <Button type=\"primary\">Зарегестрироватся</Button>\r\n                </Link>\r\n              </MenuAntd.Item>\r\n            </>\r\n          } placement=\"bottomRight\">\r\n            <Avatar className=\"avatar\" size=\"large\" icon={<img src={avatar || userIcon} alt=\"UserAvatar\" />} />\r\n          </Dropdown>\r\n        </>\r\n        : (\r\n          <Dropdown overlay={\r\n            <>\r\n              <MenuAntd>\r\n                <MenuAntd.Item>\r\n                  <Link className=\"nav-link\" to={routers.getAddBook()}>Добавить книгу</Link>\r\n                </MenuAntd.Item>\r\n                <MenuAntd.Item>\r\n                  <Link to={routers.getProfile()}>Profile</Link>\r\n                </MenuAntd.Item>\r\n                <MenuAntd.Item onClick={() => dispatch(Actions.logOut())} danger>\r\n                  Выйти\r\n                </MenuAntd.Item>\r\n              </MenuAntd>\r\n            </>\r\n          } placement=\"bottomRight\">\r\n            <Avatar className=\"avatar\" size=\"large\" icon={<img src={false || userIcon} alt=\"UserAvatar\" />} />\r\n          </Dropdown>\r\n        )}\r\n    </MenuAntd>\r\n  )\r\n}","import './Avatar.scss'\r\nimport React from 'react'\r\nimport { WebMenu } from './components/WebMenu'\r\nimport { MobileMenu } from './components/MobileMenu'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAuth, getAvatar } from 'redux/selectors'\r\n\r\nconst width: number = window.innerWidth\r\nconst currentWidth: number = 850\r\n\r\nexport type MenuProps = {\r\n  isAuth: boolean\r\n  avatar: string\r\n}\r\n\r\nconst Menu = () => {\r\n  const [showMenu, setShowMenu] = React.useState<boolean>(width > currentWidth)\r\n  const isAuth = useSelector(getAuth)\r\n  const avatar = useSelector(getAvatar)\r\n\r\n  const handleResize = React.useCallback(() => {\r\n    let clientWidth = document.body.clientWidth\r\n    if (currentWidth > clientWidth) setShowMenu(false)\r\n    else setShowMenu(true)\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [handleResize])\r\n\r\n  return (\r\n    <>\r\n      {showMenu\r\n        ? <WebMenu isAuth={isAuth} avatar={avatar} />\r\n        : <MobileMenu isAuth={isAuth} avatar={avatar} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n\r\n\r\n\r\n","import './AudioPlayer.scss'\r\nimport 'react-h5-audio-player/src/styles.scss'\r\nimport React from 'react'\r\nimport H5AudioPlayer from 'react-h5-audio-player'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Actions } from 'redux/action/audioPlayer'\r\nimport { getAudioId, getPlay } from 'redux/selectors'\r\n\r\nconst AudioPlayer = () => {\r\n  const myPlayer = React.useRef<any>(null)\r\n  const dispatch = useDispatch()\r\n  const isPlay = useSelector(getPlay)\r\n  const audioSrc = useSelector(getAudioId)\r\n\r\n  React.useEffect(() => {\r\n    if (isPlay) {\r\n      return myPlayer.current.audio.current.play()\r\n    } else if (!isPlay) {\r\n      return myPlayer.current.audio.current.pause()\r\n    }\r\n  }, [isPlay])\r\n\r\n  return (\r\n    <div className=\"audio-player\">\r\n      <div className=\"container\">\r\n        <H5AudioPlayer\r\n          autoPlay={true}\r\n          ref={myPlayer}\r\n          src={audioSrc}\r\n          onPlay={() => dispatch(Actions.isPlay(false))}\r\n          onPause={() => dispatch(Actions.isPlay(true))}\r\n          autoPlayAfterSrcChange={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioPlayer\r\n","import { Spin } from 'antd'\r\n\r\nconst style = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n}\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\" style={style}>\r\n     <Spin size=\"large\" />\r\n  </div>\r\n)\r\nexport default Loader","import \"./Modal.scss\"\r\nimport React from \"react\"\r\nimport { StateType } from \"redux/reducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { Modal as ModalBase, Input, Button } from \"antd\"\r\nimport { Actions } from \"redux/action/comments\"\r\nimport { CommentsType } from \"types\"\r\nimport Loader from \"components/Loader\"\r\nimport { Comment } from \"components\"\r\nimport {\r\n  getComments,\r\n  getCommentsShow,\r\n  getAuth,\r\n  getCommentsLoader\r\n} from \"redux/selectors\"\r\n\r\ntype StateProps = {\r\n  isShow: boolean\r\n  items: Array<CommentsType>\r\n  isAuth: boolean\r\n  isLoader: boolean\r\n}\r\ntype DispatchProps = {\r\n  isShowComments: (v: boolean) => void\r\n  fetchAddComment: (v: string) => void\r\n}\r\ntype Props = StateProps & DispatchProps\r\n\r\nconst Modal: React.FC<Props> = ({ isLoader, isShow, items, isAuth, isShowComments, fetchAddComment }) => {\r\n  const [value, setValue] = React.useState(\"\")\r\n\r\n  const handleOk = () => {\r\n    isShowComments(false)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    isShowComments(false)\r\n  }\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    fetchAddComment(value)\r\n    setValue(\"\")\r\n  }\r\n\r\n  return (\r\n    <ModalBase\r\n      title=\"Кометарии\"\r\n      visible={isShow}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={null}\r\n    >\r\n      {isLoader\r\n        ? <Loader />\r\n        : (items.map((item: CommentsType) => <Comment key={item._id} {...item} />))\r\n      }\r\n      {isAuth && (\r\n        <div style={{ display: \"flex\" }}>\r\n          <Input style={{ width: \"100%\" }} value={value} onChange={handleChange} />\r\n          <Button type=\"primary\" onClick={handleClick}>\r\n            Send\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </ModalBase>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): StateProps => ({\r\n  items: getComments(state),\r\n  isShow: getCommentsShow(state),\r\n  isAuth: getAuth(state),\r\n  isLoader: getCommentsLoader(state)\r\n})\r\nconst mapDispatchToProps: DispatchProps = {\r\n  isShowComments: Actions.isShowComments,\r\n  fetchAddComment: Actions.fetchComments\r\n}\r\n\r\n\r\nexport default connect<StateProps, DispatchProps, any, StateType>(mapStateToProps, mapDispatchToProps)(Modal)\r\n","import React, { createElement, useState } from 'react'\r\nimport { Comment, Tooltip, Avatar } from 'antd'\r\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons'\r\nimport { CommentsType } from 'types'\r\n\r\nconst CommentBase: React.FC<CommentsType> = ({text, author}) => {\r\n  const [likes, setLikes] = useState(0);\r\n  const [dislikes, setDislikes] = useState(0);\r\n  const [action, setAction] = useState<null | string>(null)\r\n\r\n  const like = () => {\r\n    setLikes(1);\r\n    setDislikes(0);\r\n    setAction('liked');\r\n  };\r\n\r\n  const dislike = () => {\r\n    setLikes(0);\r\n    setDislikes(1);\r\n    setAction('disliked');\r\n  };\r\n\r\n  const actions = [\r\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={like}>\r\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\r\n        <span className=\"comment-action\">{likes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={dislike}>\r\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\r\n        <span className=\"comment-action\">{dislikes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n  ]\r\n  return (\r\n    <Comment\r\n      actions={actions}\r\n      author={author}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={\r\n        <p>\r\n         {text}\r\n        </p>\r\n      }\r\n     \r\n    />\r\n  );\r\n}\r\nexport default CommentBase","export default __webpack_public_path__ + \"static/media/play.b82a9267.svg\";","export default __webpack_public_path__ + \"static/media/stop.a64e0090.svg\";","import './Style.scss'\r\nimport React from 'react'\r\nimport playIcon from 'assets/img/play.svg'\r\nimport stopIcon from 'assets/img/stop.svg'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Actions } from 'redux/action/audioPlayer'\r\nimport { getAudioId, getPlay } from 'redux/selectors'\r\n\r\nconst pathMp3 = require('assets/audio/as.mp3')\r\n\r\ntype Props = {\r\n  bookId: string\r\n}\r\n\r\nconst ButtonPlay: React.FC<Props> = ({ bookId }) => {\r\n  const audioPlayerId = useSelector(getAudioId)\r\n  const isPlay = useSelector(getPlay)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    if (bookId === audioPlayerId) {\r\n      dispatch(Actions.isPlay(!isPlay))\r\n      return\r\n    }\r\n    // TODO\r\n    dispatch(Actions.setAudioBookId(bookId))\r\n    dispatch(Actions.setAudio(pathMp3.default))\r\n    dispatch(Actions.isPlay(true))\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick} className=\"audio\">\r\n      {bookId === audioPlayerId && isPlay ? (\r\n        <img src={stopIcon} alt=\"stop\" />\r\n      ) : (\r\n        <img src={playIcon} alt=\"play\" />\r\n      )}\r\n\r\n      <span className=\"audio-play\">Воспроизвести</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ButtonPlay","import { FC, ReactElement } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport routers from 'const/routers'\r\nimport { getAuth } from 'redux/selectors'\r\nimport { useSelector } from 'react-redux'\r\n\r\ntype PrivateRouteType = {\r\n  component: () => ReactElement\r\n  exact?: boolean\r\n  path: string\r\n}\r\n\r\nconst PrivateRoute: FC<PrivateRouteType> = ({ component: Component, ...rest }) => {\r\n  const isAuth = useSelector(getAuth)\r\n  if (!isAuth) {\r\n    return <Redirect to={routers.getSignin()} />\r\n  }\r\n  return (\r\n    <Route\r\n      exact={rest.exact}\r\n      path={rest.path}\r\n      render={() => <Component />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import routers from 'const/routers'\r\nimport { FC, ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { getAuth } from 'redux/selectors'\r\n\r\ninterface IPublicRoute {\r\n  component: () => ReactElement\r\n  exact?: boolean\r\n  computedMatch?: object\r\n  path: string\r\n  url?: string\r\n}\r\n\r\nconst PublicRoute: FC<IPublicRoute> = ({ component: Component, ...rest }) => {\r\n  const isAuth = useSelector(getAuth)\r\n  if (!isAuth) {\r\n    return <Route\r\n      exact={rest.exact}\r\n      path={rest.path}\r\n      render={() => <Component />}\r\n    />\r\n  }\r\n  return <Redirect to={routers.getBase()} />\r\n}\r\n\r\nexport default PublicRoute","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Pagination, BackTop } from 'antd'\r\nimport { Header } from 'components'\r\nimport { Article } from 'components'\r\nimport { Actions } from 'redux/action/books'\r\nimport { getBooks, getSearchValue, getTotalBooks } from 'redux/selectors'\r\n\r\nconst Home = () => {\r\n  const books = useSelector(getBooks)\r\n  const total = useSelector(getTotalBooks)\r\n  const searchValue = useSelector(getSearchValue)\r\n  const [page, setPage] = React.useState(0)\r\n  const dispatch = useDispatch()\r\n\r\n  const handlePageClick = (page: number) => {\r\n    setPage(page)\r\n    dispatch(Actions.requestBook({ page: page - 1, search: searchValue }))\r\n  }\r\n  React.useEffect(() => {\r\n    dispatch(Actions.requestBook({ page: page, search: searchValue }))\r\n  }, [page, getSearchValue])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"articles\">\r\n          {books.length\r\n            ? books.map((book: any, index: number) => <Article key={book._id} {...book} index={index} />)\r\n            : <div style={{ height: '100%', textAlign: 'center', fontSize: '30px', fontWeight: 'bold' }}>Нечего не наедено</div>\r\n          }\r\n\r\n          {total > 5 ? (\r\n            <Pagination\r\n              style={{ textAlign: 'center' }}\r\n              current={page}\r\n              defaultCurrent={1}\r\n              defaultPageSize={5}\r\n              total={total}\r\n              onChange={handlePageClick}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <BackTop />\r\n    </>\r\n  )\r\n}\r\nexport default Home\r\n","import React from 'react'\r\nimport { AuthorBlock, ButtonPlay } from 'components'\r\nimport { BookType } from 'types'\r\n\r\nconst CardBook: React.FC<BookType> = ({ _id, imgUrl, name }) => {\r\n  return (\r\n    <div className='profile__list-card'>\r\n      <div className='img'>\r\n        <img src={imgUrl} alt='avatar' />\r\n      </div>\r\n      <div style={{ marginLeft: '20px' }}>\r\n        <h3 className='title'>{name}</h3>\r\n        <AuthorBlock name={name} />\r\n        <ButtonPlay bookId={_id} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardBook","import './Profile.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Image } from 'antd'\r\nimport { Typography } from 'antd'\r\nimport ActionsUser from 'redux/action/user'\r\nimport { getAvatar, getBooks, getUserName } from 'redux/selectors'\r\nimport CardBook from './CardBook'\r\n\r\nconst { Title } = Typography\r\n\r\nconst Profile = () => {\r\n  const books = useSelector(getBooks)\r\n  const avatar = useSelector(getAvatar)\r\n  const userName = useSelector(getUserName)\r\n  const dispatch = useDispatch()\r\n\r\n  const onChange = (e: any) => {\r\n    dispatch(ActionsUser.updateAvatar(e.target.files[0]))\r\n  }\r\n\r\n  return <div className='profile'>\r\n    <div className='container'>\r\n      <Card >\r\n        <div className='profile__header'>\r\n          <div>\r\n            <Image\r\n              width={200}\r\n              src={avatar}\r\n            />\r\n            <Title level={2} >Изменить аватар</Title>\r\n            <input className='profile__header-field' type=\"file\" onChange={onChange} />\r\n          </div>\r\n          <Title level={1}><span style={{ fontSize: '20px' }}>Имя: </span>{userName}</Title>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <Title level={3}>Выбраные киниги:</Title>\r\n        <div className='profile__list'>\r\n          {books.map((book) => <CardBook key={book._id} {...book} />)}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Profile","\r\nimport './Auth.scss'\r\nimport { Form, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { FormField } from 'components'\r\nimport { FormikProps } from 'formik'\r\nimport { LoginFormType } from 'types'\r\n\r\nconst LoginForm = (props: FormikProps<LoginFormType>) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting\r\n  } = props\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"auth__content\">\r\n        <div className=\"auth__top\">\r\n          <h2>Войти в аккаунт</h2>\r\n          <p>Пожалуйста, войдите в свой аккаунт</p>\r\n        </div>\r\n        <div>\r\n          <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              name=\"email\"\r\n              placeholder=\"E-Mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n            <FormField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Пароль\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <Form.Item>\r\n              {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n              <Button\r\n                disabled={isSubmitting}\r\n                block={true}\r\n                htmlType='submit'\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Войти в аккаунт\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signup\">\r\n              Зарегистрироваться\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","const validate = ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: (value) => {\r\n      if (!value) {\r\n        errors.email = \"Введите E-Mail\"\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неверный E-Mail\"\r\n      }\r\n    },\r\n    password: (value) => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\"\r\n      } else if (!isAuth && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)) {\r\n        errors.password = \"Слишком лёгкий пароль\"\r\n      }\r\n    },\r\n    password_2: (value) => {\r\n      if (!isAuth && value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\"\r\n      }\r\n    },\r\n    fullname: (value) => {\r\n      if (!isAuth && !value) {\r\n        errors.fullname = \"Укажите свое имя\"\r\n      }\r\n    }\r\n  }\r\n\r\n  Object.keys(values).forEach((key) => rules[key] && rules[key](values[key]))\r\n}\r\n\r\nexport default validate\r\n","import { withFormik } from 'formik'\r\nimport LoginForm from '../component'\r\nimport validateForm from 'helpers/validate'\r\nimport Actions from 'redux/action/user'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LoginFormWithFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    password: ''\r\n  }),\r\n  validate: values => {\r\n    let errors = {}\r\n    validateForm({ isAuth: true, values, errors })\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { props }) => {\r\n    //@ts-ignore\r\n    props.dispatch(Actions.fetchAuthorization(values))\r\n  },\r\n  displayName: 'LoginForm'\r\n})(LoginForm)\r\n\r\n\r\nconst LoginFormContainer: any = connect()(LoginFormWithFormik)\r\nexport default LoginFormContainer\r\n","import LoginForm from \"./container\"\r\n\r\nexport default LoginForm\r\n","import './Auth.scss'\r\nimport { Form, Button } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FormikProps } from \"formik\"\r\nimport { FormField } from \"components\"\r\nimport { RegistrationFormType } from 'types'\r\n\r\nconst RegisterForm = (props: FormikProps<RegistrationFormType>) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting\r\n  } = props\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"auth__content\">\r\n        <div className=\"auth__top\">\r\n          <h2>Регистрация</h2>\r\n          <p>Вам нужно зарегистрироваться</p>\r\n        </div>\r\n        <div>\r\n          <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              name=\"email\"\r\n              placeholder=\"E-Mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"fullname\"\r\n              placeholder=\"Ваше имя\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"password\"\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"password_2\"\r\n              placeholder=\"Повторите пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <Form.Item>\r\n              {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n              <Button\r\n                disabled={isSubmitting}\r\n                block={true}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onSubmit={handleSubmit}\r\n                size=\"large\"\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signin\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import { withFormik } from 'formik'\r\nimport RegisterForm from '../component'\r\nimport validateForm from 'helpers/validate'\r\nimport Actions from 'redux/action/user'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst RegisterWidthFormik = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    fullname: '',\r\n    password: '',\r\n    password_2: ''\r\n  }),\r\n  validate: values => {\r\n    let errors = {}\r\n    validateForm({ isAuth: false, values, errors })\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { props, setSubmitting, setErrors }) => {\r\n    //@ts-ignore\r\n    props.dispatch(Actions.fetchRegistration(values))\r\n  },\r\n  displayName: 'RegisterForm'\r\n})(RegisterForm)\r\n\r\nconst RegisterFormContainer: any = connect()(RegisterWidthFormik)\r\nexport default RegisterFormContainer\r\n","import RegisterForm from \"./container\"\r\n\r\nexport default RegisterForm\r\n","import './Style.scss'\r\nimport React from 'react'\r\nimport { Input } from 'antd'\r\nimport cn from 'classnames'\r\n\r\nconst { TextArea } = Input\r\ntype Props = {\r\n  name: string\r\n  value?: any\r\n  error?: any\r\n  placeholder?: string\r\n  minRows?: number\r\n  maxRows?: number\r\n  label?: string\r\n  styleProp?: any\r\n  onChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst InputText = (props: Props) => {\r\n  const { name, value, placeholder, error, minRows = 1, maxRows = 1, label, styleProp, onChange } = props\r\n  return (\r\n    <>\r\n      <label id={name}\r\n        className={cn('input__label', { 'input__label-error': error[name] })}\r\n      >\r\n        {label}\r\n      </label>\r\n      <TextArea\r\n        id={name}\r\n        name={name}\r\n        value={value[name]}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        autoSize={{ minRows, maxRows }}\r\n        style={styleProp}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputText","import './AddBook.scss'\r\nimport React from 'react'\r\nimport { Button } from 'antd'\r\nimport TextArea from 'components/input/TextArea'\r\nimport { AddBookType } from 'types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Actions } from 'redux/action/books'\r\n\r\nconst initValue = {\r\n  name: '',\r\n  author: '',\r\n  description: '',\r\n}\r\n\r\nconst AddBook = () => {\r\n  const dispatch = useDispatch()\r\n  const [formaData, setFormData] = React.useState<AddBookType>(initValue)\r\n  const [error, setError] = React.useState<{ [key: string]: boolean }>({})\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { name, value } = event.target\r\n    if (error[name] === true) {\r\n      setError((prev) => ({ ...prev, [name]: false }))\r\n    }\r\n    setFormData((prev) => ({ ...prev, [name]: value }))\r\n  }\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    const checkFillingInput = Object.entries(formaData).reduce((acc, [key, value]) => {\r\n      return !value ? { ...acc, [key]: true } : acc\r\n    }, {})\r\n    if (Object.values(checkFillingInput).length) {\r\n      return setError({ ...checkFillingInput })\r\n    } else {\r\n      setError({})\r\n    }\r\n    dispatch(Actions.requestAddBook(formaData))\r\n  }\r\n\r\n  return (\r\n    <div className=\"addbook\">\r\n      <div className=\"container\">\r\n        <div className=\"addbook-wrap\">\r\n          <form className=\"addbook__form\" onSubmit={handleSubmit}>\r\n            <TextArea\r\n              name='name'\r\n              value={formaData}\r\n              onChange={handleChange}\r\n              label='Введите название книги'\r\n              placeholder='название книги'\r\n              error={error}\r\n              styleProp={{ width: '500px' }}\r\n            />\r\n            <TextArea\r\n              name='author'\r\n              value={formaData}\r\n              onChange={handleChange}\r\n              label='Введите  И. Ф. автора'\r\n              placeholder='И Ф автора'\r\n              error={error}\r\n              styleProp={{ width: '500px' }}\r\n            />\r\n            <TextArea\r\n              name='description'\r\n              value={formaData}\r\n              onChange={handleChange}\r\n              label='Описяние'\r\n              placeholder='И Ф автора'\r\n              error={error}\r\n              minRows={3}\r\n              maxRows={7}\r\n              styleProp={{ width: '500px' }}\r\n            />\r\n            <div className='addbook__btn'>\r\n              <Button type='primary' htmlType='submit'>Добавить</Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBook","import { Switch, Redirect, Route } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport routers from 'const/routers'\r\nimport { AudioPlayer } from 'components'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAudioId, getCommentsShow } from 'redux/selectors'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\nimport { Signin, Signup, Profile, Home, AddBook } from 'page'\r\nimport Modal from 'components/Modal'\r\nimport Header from 'components/Header'\r\n\r\nconst AppRouters = () => {\r\n  const isAudio = useSelector(getAudioId)\r\n  const showModal = useSelector(getCommentsShow)\r\n  return <Router>\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Switch>\r\n        <PublicRoute exact path={routers.getSignin()} component={Signin} />\r\n        <PublicRoute exact path={routers.getSignup()} component={Signup} />\r\n        <PrivateRoute exact path={routers.getAddBook()} component={AddBook} />\r\n        <PrivateRoute exact path={routers.getProfile()} component={Profile} />\r\n        <Route path={routers.getBase()} component={Home} />\r\n        <Route path=\"*\">\r\n          <Redirect to={routers.getBase()} />\r\n        </Route>\r\n      </Switch>\r\n      {!!isAudio && <AudioPlayer />}\r\n      {showModal && <Modal />}\r\n    </div>\r\n  </Router>\r\n}\r\n\r\nexport default AppRouters\r\n","import './style/App.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./redux/store\"\r\nimport AppRouters from 'components/AppRouter'\r\nimport Actions from 'redux/action/user'\r\nimport { Actions as ActionsBooks } from 'redux/action/books'\r\n\r\nstore.dispatch(Actions.userProfile())\r\nstore.dispatch(ActionsBooks.requestBook({}))\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouters />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n/* eslint-disable */\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}