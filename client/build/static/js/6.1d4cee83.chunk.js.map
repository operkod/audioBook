{"version":3,"sources":["components/input/FieldAuth.tsx","helpers/validators.ts","page/Signin/index.tsx"],"names":["FormField","props","name","placeholder","type","handleChange","handleBlur","errors","values","Item","validateStatus","status","undefined","help","text","hasFeedback","id","size","value","onChange","onBlur","emailValidator","email","test","LoginForm","dispatch","useDispatch","isLoading","useSelector","getAuthLoading","t","useTranslation","React","useState","password","formaData","setFormData","error","setError","useCallback","event","target","prev","isValidEmail","isButtonDisabled","useMemo","Object","some","item","handleSubmit","preventDefault","entries","reduce","acc","key","Actions","fetchAuthorization","className","onSubmit","disabled","block","htmlType","to","routers","getSignup"],"mappings":"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","file":"static/js/6.1d4cee83.chunk.js","sourcesContent":["import { Form, Input } from 'antd'\r\nimport { ChangeEvent, FocusEvent } from 'react'\r\n\r\ntype PropsType = {\r\n\tname: string\r\n\tplaceholder: string\r\n\ttype: string\r\n\thandleChange: (event: ChangeEvent<HTMLInputElement>) => void\r\n\thandleBlur: (event: FocusEvent<HTMLInputElement>) => void\r\n\terrors: any\r\n\tvalues: any\r\n}\r\n\r\nconst FormField = (props: PropsType) => {\r\n\tconst { name, placeholder, type, handleChange, handleBlur, errors, values } =\r\n\t\tprops\r\n\treturn (\r\n\t\t<Form.Item\r\n\t\t\tvalidateStatus={errors[name].status ? 'error' : undefined}\r\n\t\t\thelp={errors[name].status ? errors[name].text : undefined}\r\n\t\t\thasFeedback>\r\n\t\t\t<Input\r\n\t\t\t\tid={name}\r\n\t\t\t\tname={name}\r\n\t\t\t\tsize='large'\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={values[name]}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\ttype={type}\r\n\t\t\t/>\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nexport default FormField\r\n","export const emailValidator = (email: string) => {\r\n   // eslint-disable-next-line no-useless-escape\r\n  const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n  return reg.test(email)\r\n}\r\n\r\nexport const phoneValidator = (phone: string) => {\r\n  // eslint-disable-next-line no-useless-escape\r\n  const reg = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/\r\n  return reg.test(phone)\r\n}\r\n","import './Auth.scss'\r\nimport React from 'react'\r\nimport { Form, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Input from 'components/input/FieldAuth'\r\nimport { FormDataErrorType, LoginFormType } from 'types'\r\nimport { useTranslation } from 'react-i18next'\r\nimport routers from 'const/routers'\r\nimport { emailValidator } from 'helpers/validators'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAuthLoading } from 'redux/selectors'\r\nimport Actions from 'redux/action/user'\r\n\r\nconst LoginForm = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isLoading = useSelector(getAuthLoading)\r\n\tconst { t } = useTranslation()\r\n\tconst [formaData, setFormData] = React.useState<LoginFormType>({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t})\r\n\tconst [error, setError] = React.useState<FormDataErrorType>({\r\n\t\temail: { status: false, text: '' },\r\n\t\tpassword: { status: false, text: '' }\r\n\t})\r\n\r\n\tconst handleChange = React.useCallback(\r\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tconst { name, value } = event.target\r\n\t\t\tif (error[name].status === true) {\r\n\t\t\t\tsetError(prev => ({ ...prev, [name]: { status: false, text: '' } }))\r\n\t\t\t}\r\n\t\t\tsetFormData(prev => ({ ...prev, [name]: value }))\r\n\t\t},\r\n\t\t[error]\r\n\t)\r\n\r\n\tconst handleBlur = React.useCallback(\r\n\t\t(event: React.FocusEvent<HTMLInputElement>) => {\r\n\t\t\tconst { name, value } = event.target\r\n\t\t\tif (name === 'email' && value) {\r\n\t\t\t\tconst isValidEmail = !emailValidator(value)\r\n\t\t\t\tsetError(prev => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\t[name]: {\r\n\t\t\t\t\t\tstatus: isValidEmail,\r\n\t\t\t\t\t\ttext: isValidEmail ? t('errors.emailNotValid') : ''\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t} else {\r\n\t\t\t\tsetError(prev => ({\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\t[name]: { status: !value, text: !value ? t('errors.required') : '' }\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t},\r\n\t\t[t]\r\n\t)\r\n\r\n\tconst isButtonDisabled = React.useMemo(\r\n\t\t() => Object.values(error).some(item => item.status === true) || isLoading,\r\n\t\t[error, isLoading]\r\n\t)\r\n\r\n\tconst handleSubmit = React.useCallback(\r\n\t\t(event: React.FormEvent) => {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tconst checkFillingInput = Object.entries(formaData).reduce(\r\n\t\t\t\t(acc, [key, value]) => {\r\n\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\tsetError(prev => ({\r\n\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t[key]: { status: true, text: t('errors.required') }\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\treturn (acc = true)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t)\r\n\t\t\tif (checkFillingInput) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tdispatch(Actions.fetchAuthorization(formaData))\r\n\t\t},\r\n\t\t[t, formaData, dispatch]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<section className='auth'>\r\n\t\t\t<div className='auth__content'>\r\n\t\t\t\t<div className='auth__top'>\r\n\t\t\t\t\t<h2>{t('auth.headerAuthentication.title')}</h2>\r\n\t\t\t\t\t<p>{t('auth.headerAuthentication.subtitle')}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form onSubmit={handleSubmit} className='login-form'>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder={t('auth.input.email')}\r\n\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\thandleBlur={handleBlur}\r\n\t\t\t\t\t\t\terrors={error}\r\n\t\t\t\t\t\t\tvalues={formaData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder={t('auth.input.password')}\r\n\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\thandleBlur={handleBlur}\r\n\t\t\t\t\t\t\terrors={error}\r\n\t\t\t\t\t\t\tvalues={formaData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={isButtonDisabled}\r\n\t\t\t\t\t\t\t\tblock={true}\r\n\t\t\t\t\t\t\t\thtmlType='submit'\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tsize='large'>\r\n\t\t\t\t\t\t\t\t{t('auth.button.signIn')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Link className='auth__register-link' to={routers.getSignup()}>\r\n\t\t\t\t\t\t\t{t('auth.button.registration')}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default LoginForm\r\n"],"sourceRoot":""}